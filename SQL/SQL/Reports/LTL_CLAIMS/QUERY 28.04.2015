SELECT SH.SHIPMENT_GID,
ORS.ORDER_RELEASE_GID,
SH.INSERT_USER,
SH.INSERT_DATE,
ORF3.ORDER_RELEASE_REFNUM_VALUE AS OR_FUNCTIONAL_REGION,
srf.SHIPMENT_REFNUM_VALUE AS SH_FUNCTIONAL_REGION,
ORS.SOURCE_LOCATION_GID AS OR_SOURCE,
loc.LOCATION_NAME AS OR_SOURCE_NAME,
loc.CITY AS OR_SOURCE_CITY,
ORS.DEST_LOCATION_GID AS OR_DEST,
loc2.LOCATION_NAME AS OR_DEST_NAME,
loc2.CITY as OR_DEST_CITY,
seq.EQUIPMENT_GROUP_GID AS SH_EQUIPMENT,
orf.ORDER_RELEASE_REFNUM_VALUE AS OR_PFS,
ors.TOTAL_WEIGHT AS OR_WEIGHT,
orf2.ORDER_RELEASE_REFNUM_VALUE AS OR_TRANSPORT_CONDITION,
orf4.ORDER_RELEASE_REFNUM_VALUE AS OR_MATERIAL_TYPE,
os.STATUS_VALUE_GID AS IS_CANCELLED
FROM
  ORDER_RELEASE ORS  JOIN ORDER_RELEASE_STATUS OS ON ORS.ORDER_RELEASE_GID=OS.ORDER_RELEASE_GID AND OS.STATUS_TYPE_GID='ULE.CANCELLED'
  LEFT OUTER JOIN ORDER_RELEASE_REFNUM ORF ON ORS.ORDER_RELEASE_GID=ORF.ORDER_RELEASE_GID AND ORF.ORDER_RELEASE_REFNUM_QUAL_GID='ULE.ULE_ORIGINAL_PFS'
  LEFT OUTER JOIN ORDER_RELEASE_REFNUM ORF1 ON ORS.ORDER_RELEASE_GID=ORF1.ORDER_RELEASE_GID and ORF1.ORDER_RELEASE_REFNUM_QUAL_GID='ULE.ULE_STREAM'
  LEFT OUTER JOIN ORDER_RELEASE_REFNUM ORF2 ON ORS.ORDER_RELEASE_GID=ORF2.ORDER_RELEASE_GID and ORF2.ORDER_RELEASE_REFNUM_QUAL_GID='ULE.ULE_TRANSPORT_CONDITION'
  LEFT OUTER JOIN ORDER_RELEASE_REFNUM ORF3 ON ORS.ORDER_RELEASE_GID=ORF3.ORDER_RELEASE_GID and ORF3.ORDER_RELEASE_REFNUM_QUAL_GID='ULE.ULE_FUNCTIONAL_REGION'
  LEFT OUTER JOIN ORDER_RELEASE_REFNUM ORF4 ON ORS.ORDER_RELEASE_GID=ORF4.ORDER_RELEASE_GID and ORF4.ORDER_RELEASE_REFNUM_QUAL_GID='ULE.ULE_MATERIAL_TYPE'
  LEFT OUTER JOIN LOCATION_REFNUM LRF ON ORS.SOURCE_LOCATION_GID=LRF.LOCATION_GID AND LRF.LOCATION_REFNUM_QUAL_GID='ULE.ULE_LTL_PLANNER'
  LEFT OUTER JOIN LOCATION loc on ORS.SOURCE_LOCATION_GID = loc.LOCATION_GID
  left outer join LOCATION loc2 on ORS.DEST_LOCATION_GID = loc2.LOCATION_GID 
  left outer join ORDER_MOVEMENT om on ORS.ORDER_RELEASE_GID = OM.ORDER_RELEASE_GID
  left outer join SHIPMENT sh on om.SHIPMENT_GID = SH.SHIPMENT_GID
  left outer join SHIPMENT_REFNUM SRF ON SH.SHIPMENT_GID = SRF.SHIPMENT_GID AND srf.SHIPMENT_REFNUM_QUAL_GID = 'ULE.ULE_FUNCTIONAL_REGION'
  left outer join SHIPMENT_S_EQUIPMENT_JOIN se on SH.SHIPMENT_GID = se.SHIPMENT_GID
  left outer join S_EQUIPMENT seq on se.S_EQUIPMENT_GID = seq.S_EQUIPMENT_GID

WHERE
--TO_DATE(ORS.EARLY_PICKUP_DATE,'DD\MM\YY')>=TO_DATE(SYSDATE,'DD\MM\YY') and 
 ORS.TRANSPORT_HANDLING_UNIT_GID!='ULE.BULK_TANKER'
-- AND TO_DATE(ORS.EARLY_PICKUP_DATE,'DD\MM\YY')<=TO_DATE(SYSDATE+7,'DD\MM\YY')
  --AND OS.       STATUS_VALUE_GID!='CANCELLED'
  AND ORF1.ORDER_RELEASE_REFNUM_VALUE='PRIMARY'
--AND(CASE when ORF3.ORDER_RELEASE_REFNUM_value='INBOUND' then 1
--WHEN ORF2.order_release_refnum_value='AMBIENT' AND ORS.TOTAL_WEIGHT<24000 then 1
--when ORF2.order_release_refnum_value='TEMPC' AND ORS.TOTAL_WEIGHT<21500 then 1
  --ELSE 0 END)=1
--AND(case when ORF3.ORDER_RELEASE_REFNUM_value='INBOUND' then 1
  --     when LENGTH(TRIM(TRANSLATE(orf.order_release_refnum_value,'+-.0123456789',' ')))is not null then 1
   --ELSE CASE
     --       WHEN TO_NUMBER(ORF.order_release_refnum_value)<26 THEN 1
       --     ELSE 0 END END)=1
AND not exists  (select * from LOCATION_REFNUM L2 where ORS.SOURCE_LOCATION_GID=L2.LOCATION_GID AND L2.LOCATION_REFNUM_QUAL_GID='ULE.ULE_LTL_EXCLUSION' and substr(ORS.DEST_LOCATION_GID,5,99)=L2.LOCATION_REFNUM_VALUE)
/* AND trunc(sh.insert_date) <= trunc(to_date(:P_INSERT_DATE,:P_DATE_TIME_FORMAT)) */
AND TO_CHAR(sh.insert_date,'YYYY') = :P_YEAR
AND TO_CHAR(sh.insert_date,'MM') = :P_MONTH
