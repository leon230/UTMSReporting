<dataTemplate name="COLLIE_DATA" description="COLLIE DATA">
 <parameters>
  <parameter name="P_GL_USER" dataType="character" defaultValue="DBA.ADMIN" />
  <parameter name="P_ROLE_ID" dataType="character" defaultValue="ADMIN" />
  <parameter name="P_DATE_TIME_FORMAT" dataType="character" />
  <parameter name="INSERT_DATE_FROM" dataType="character" />
  <parameter name="INSERT_DATE_TO" dataType="character" />


		
  </parameters>
  <lexicals /> 
 <dataQuery>
  
  
 <sqlStatement name="Q_QUERY">
<![CDATA[ 

SELECT DISTINCT /* (SELECT TO_CHAR(SH_TEMP.START_TIME,'DD-MM-YYYY')
		FROM SHIPMENT SH_TEMP
		WHERE SH_TEMP.SHIPMENT_GID = VORLS.SHIPMENT_GID
		)	AS																																					SHIPMENT_START_DATE, */
	CASE 
WHEN (ORLS.ORDER_RELEASE_TYPE_GID = 'INBOUND')
THEN TO_CHAR(SH.END_TIME,'DD-MM-YYYY')
ELSE TO_CHAR(SH.START_TIME,'DD-MM-YYYY')
END AS 																																							SHIPMENT_START_DATE,


		ORLSL.ORDER_RELEASE_LINE_GID                                																							OR_LINE_ID,
		ORLS.ORDER_RELEASE_GID																																	OR_ID,
		VORLS.SHIPMENT_GID 																																		SH_GID,
		(SELECT LISTAGG(OR_CAT.ORDER_RELEASE_REFNUM_VALUE,'|') WITHIN GROUP (ORDER BY OR_CAT.ORDER_RELEASE_GID)
		FROM ORDER_RELEASE_REFNUM OR_CAT
		WHERE OR_CAT.ORDER_RELEASE_GID = ORLS.ORDER_RELEASE_GID 
		AND OR_CAT.ORDER_RELEASE_REFNUM_QUAL_GID ='ULE.ULE_MATERIAL_CATEGORY') AS 																				CATEGORY,
		(SELECT LISTAGG(OR_MAT.ORDER_RELEASE_REFNUM_VALUE,'|') WITHIN GROUP (ORDER BY OR_MAT.ORDER_RELEASE_GID)
		FROM ORDER_RELEASE_REFNUM OR_MAT
		WHERE OR_MAT.ORDER_RELEASE_GID = ORLS.ORDER_RELEASE_GID 
		AND OR_MAT.ORDER_RELEASE_REFNUM_QUAL_GID ='ULE.ULE_MATERIAL_TYPE') AS 																					MATERIAL,
		/* ORLS.TRANSPORT_MODE_GID																																	TRANSPORT_MODE, */
		(SELECT SH_TEMP.TRANSPORT_MODE_GID
		FROM SHIPMENT SH_TEMP
		WHERE SH_TEMP.SHIPMENT_GID = VORLS.SHIPMENT_GID
		
		)																																						TRANSPORT_MODE,

		CASE WHEN ORLS.ORDER_RELEASE_TYPE_GID = 'INBOUND' THEN 'INBOUND'
		ELSE 'OUTBOUND'
		END AS																																					INB_OUTB,
		
		ORLS.INCO_TERM_GID																																		INCOTERM,
		
		NVL((SELECT LISTAGG(OR_CARR.ORDER_RELEASE_REFNUM_VALUE,'|') WITHIN GROUP (ORDER BY OR_CARR.ORDER_RELEASE_GID)
		FROM ORDER_RELEASE_REFNUM OR_CARR
		WHERE OR_CARR.ORDER_RELEASE_GID = ORLS.ORDER_RELEASE_GID 
		AND OR_CARR.ORDER_RELEASE_REFNUM_QUAL_GID ='UGO.ULE_CARRIAGE_CONDITION'),'-') AS 																		CARRIAGE_CONDITION,
		
		(SELECT LISTAGG(OR_CONSIGNOR.INVOLVED_PARTY_CONTACT_GID,'|') WITHIN GROUP (ORDER BY OR_CONSIGNOR.ORDER_RELEASE_GID)
		FROM ORDER_RELEASE_INV_PARTY OR_CONSIGNOR
		WHERE OR_CONSIGNOR.ORDER_RELEASE_GID = ORLS.ORDER_RELEASE_GID 
		AND OR_CONSIGNOR.INVOLVED_PARTY_QUAL_GID ='UGO.UGO_CONSIGNOR') AS 																						CONSIGNOR_ID,
		
		(SELECT LISTAGG(LOC_TEMP.LOCATION_NAME,'|') WITHIN GROUP (ORDER BY LOC_TEMP.LOCATION_GID)
		FROM LOCATION LOC_TEMP,
		ORDER_RELEASE_INV_PARTY OR_CONSIGNOR
		WHERE
		OR_CONSIGNOR.ORDER_RELEASE_GID = ORLS.ORDER_RELEASE_GID 
		AND OR_CONSIGNOR.INVOLVED_PARTY_QUAL_GID ='UGO.UGO_CONSIGNOR'
		AND OR_CONSIGNOR.INVOLVED_PARTY_CONTACT_GID = LOC_TEMP.LOCATION_GID
		
		) AS																																					CONSIGNOR_NAME,
		(SELECT LISTAGG(LOC_TEMP.CITY,'|') WITHIN GROUP (ORDER BY LOC_TEMP.LOCATION_GID)
		FROM LOCATION LOC_TEMP,
		ORDER_RELEASE_INV_PARTY OR_CONSIGNOR
		WHERE
		OR_CONSIGNOR.ORDER_RELEASE_GID = ORLS.ORDER_RELEASE_GID 
		AND OR_CONSIGNOR.INVOLVED_PARTY_QUAL_GID ='UGO.UGO_CONSIGNOR'
		AND OR_CONSIGNOR.INVOLVED_PARTY_CONTACT_GID = LOC_TEMP.LOCATION_GID
		
		) AS																																					CONSIGNOR_CITY,
		(SELECT LISTAGG(LOC_TEMP.COUNTRY_CODE3_GID,'|') WITHIN GROUP (ORDER BY LOC_TEMP.LOCATION_GID)
		FROM LOCATION LOC_TEMP,
		ORDER_RELEASE_INV_PARTY OR_CONSIGNOR
		WHERE
		OR_CONSIGNOR.ORDER_RELEASE_GID = ORLS.ORDER_RELEASE_GID 
		AND OR_CONSIGNOR.INVOLVED_PARTY_QUAL_GID ='UGO.UGO_CONSIGNOR'
		AND OR_CONSIGNOR.INVOLVED_PARTY_CONTACT_GID = LOC_TEMP.LOCATION_GID
		
		) AS																																					CONSIGNOR_COUNTRY,
		
		(SELECT LISTAGG(OR_CONSIGNEE.INVOLVED_PARTY_CONTACT_GID,'|') WITHIN GROUP (ORDER BY OR_CONSIGNEE.ORDER_RELEASE_GID)
		FROM ORDER_RELEASE_INV_PARTY OR_CONSIGNEE
		WHERE OR_CONSIGNEE.ORDER_RELEASE_GID = ORLS.ORDER_RELEASE_GID 
		AND OR_CONSIGNEE.INVOLVED_PARTY_QUAL_GID ='CONSIGNEE') AS 																								CONSIGNEE_ID,
		
		(SELECT LISTAGG(LOC_TEMP.LOCATION_NAME,'|') WITHIN GROUP (ORDER BY LOC_TEMP.LOCATION_GID)
		FROM LOCATION LOC_TEMP,
		ORDER_RELEASE_INV_PARTY OR_CONSIGNOR
		WHERE
		OR_CONSIGNOR.ORDER_RELEASE_GID = ORLS.ORDER_RELEASE_GID 
		AND OR_CONSIGNOR.INVOLVED_PARTY_QUAL_GID ='CONSIGNEE'
		AND OR_CONSIGNOR.INVOLVED_PARTY_CONTACT_GID = LOC_TEMP.LOCATION_GID
		
		) AS																																					CONSIGNEE_NAME,
		(SELECT LISTAGG(LOC_TEMP.CITY,'|') WITHIN GROUP (ORDER BY LOC_TEMP.LOCATION_GID)
		FROM LOCATION LOC_TEMP,
		ORDER_RELEASE_INV_PARTY OR_CONSIGNOR
		WHERE
		OR_CONSIGNOR.ORDER_RELEASE_GID = ORLS.ORDER_RELEASE_GID 
		AND OR_CONSIGNOR.INVOLVED_PARTY_QUAL_GID ='CONSIGNEE'
		AND OR_CONSIGNOR.INVOLVED_PARTY_CONTACT_GID = LOC_TEMP.LOCATION_GID
		
		) AS																																					CONSIGNEE_CITY,
		(SELECT LISTAGG(LOC_TEMP.COUNTRY_CODE3_GID,'|') WITHIN GROUP (ORDER BY LOC_TEMP.LOCATION_GID)
		FROM LOCATION LOC_TEMP,
		ORDER_RELEASE_INV_PARTY OR_CONSIGNOR
		WHERE
		OR_CONSIGNOR.ORDER_RELEASE_GID = ORLS.ORDER_RELEASE_GID 
		AND OR_CONSIGNOR.INVOLVED_PARTY_QUAL_GID ='CONSIGNEE'
		AND OR_CONSIGNOR.INVOLVED_PARTY_CONTACT_GID = LOC_TEMP.LOCATION_GID
		
		) AS																																					CONSIGNEE_COUNTRY,

		ORLS.SOURCE_LOCATION_GID AS																																SOURCE_LOCATION_ID,
		(SELECT LOC_TEMP.LOCATION_NAME
		FROM LOCATION LOC_TEMP
		WHERE
		LOC_TEMP.LOCATION_GID = ORLS.SOURCE_LOCATION_GID
		) AS																																					SOURCE_LOC_NAME,
		(SELECT LOC_TEMP.CITY
		FROM LOCATION LOC_TEMP
		WHERE
		LOC_TEMP.LOCATION_GID = ORLS.SOURCE_LOCATION_GID
		) AS																																					SOURCE_LOC_CITY,
		(SELECT LOC_TEMP.COUNTRY_CODE3_GID
		FROM LOCATION LOC_TEMP
		WHERE
		LOC_TEMP.LOCATION_GID = ORLS.SOURCE_LOCATION_GID
		) AS																																					SOURCE_LOC_COUNTRY,
		
		ORLS.PORT_OF_LOAD_LOCATION_GID AS																														POL,
		(SELECT LOC_TEMP.LOCATION_NAME
		FROM LOCATION LOC_TEMP
		WHERE
		LOC_TEMP.LOCATION_GID = ORLS.PORT_OF_LOAD_LOCATION_GID
		) AS																																					POL_NAME,
		(SELECT LOC_TEMP.CITY
		FROM LOCATION LOC_TEMP
		WHERE
		LOC_TEMP.LOCATION_GID = ORLS.PORT_OF_LOAD_LOCATION_GID
		) AS																																					POL_CITY,
		(SELECT LOC_TEMP.COUNTRY_CODE3_GID
		FROM LOCATION LOC_TEMP
		WHERE
		LOC_TEMP.LOCATION_GID = ORLS.PORT_OF_LOAD_LOCATION_GID
		) AS																																					POL_COUNTRY,
		
		ORLS.PORT_OF_DIS_LOCATION_GID AS																														POD,
		(SELECT LOC_TEMP.LOCATION_NAME
		FROM LOCATION LOC_TEMP
		WHERE
		LOC_TEMP.LOCATION_GID = ORLS.PORT_OF_DIS_LOCATION_GID
		) AS																																					POD_NAME,
		(SELECT LOC_TEMP.CITY
		FROM LOCATION LOC_TEMP
		WHERE
		LOC_TEMP.LOCATION_GID = ORLS.PORT_OF_DIS_LOCATION_GID
		) AS																																					POD_CITY,
		(SELECT LOC_TEMP.COUNTRY_CODE3_GID
		FROM LOCATION LOC_TEMP
		WHERE
		LOC_TEMP.LOCATION_GID = ORLS.PORT_OF_DIS_LOCATION_GID
		) AS																																					POD_COUNTRY,
		
		ORLS.DEST_LOCATION_GID AS																																DEST_LOCATION_ID,
		(SELECT LOC_TEMP.LOCATION_NAME
		FROM LOCATION LOC_TEMP
		WHERE
		LOC_TEMP.LOCATION_GID = ORLS.DEST_LOCATION_GID
		) AS																																					DEST_LOC_NAME,
		(SELECT LOC_TEMP.CITY
		FROM LOCATION LOC_TEMP
		WHERE
		LOC_TEMP.LOCATION_GID = ORLS.DEST_LOCATION_GID
		) AS																																					DEST_LOC_CITY,
		(SELECT LOC_TEMP.COUNTRY_CODE3_GID
		FROM LOCATION LOC_TEMP
		WHERE
		LOC_TEMP.LOCATION_GID = ORLS.DEST_LOCATION_GID
		) AS																																					DEST_LOC_COUNTRY,
		(SELECT ORLS_REF.ORDER_RELEASE_REFNUM_VALUE
		FROM ORDER_RELEASE_REFNUM ORLS_REF
		WHERE
		ORLS_REF.ORDER_RELEASE_GID = ORLS.ORDER_RELEASE_GID
		AND ORLS_REF.ORDER_RELEASE_REFNUM_QUAL_GID='ULE.ULE_TRANSPORT_CONDITION'
		
		) AS																																					TRANSPORT_CONDITION,
		NVL(ORLS.EQUIPMENT_GROUP_GID,'-')																														EQUIPMENT_GR,
		(SELECT SH_TEMP.SERVPROV_GID
		FROM SHIPMENT SH_TEMP
		WHERE VORLS.SHIPMENT_GID = SH_TEMP.SHIPMENT_GID
		
		)	AS																																					SERVPROV_ID,
		(SELECT SERVPROV_TEMP.LOCATION_NAME
		FROM SHIPMENT SH_TEMP,
				LOCATION SERVPROV_TEMP
		WHERE VORLS.SHIPMENT_GID = SH_TEMP.SHIPMENT_GID
			AND SH_TEMP.SERVPROV_GID = SERVPROV_TEMP.LOCATION_GID
		
		)	AS																																					SERVPROV_NAME,
		LTRIM(TO_CHAR(orls.TOTAL_WEIGHT_BASE*0.45,'999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')) 																GROSS_WEIGHT_KG,
		LTRIM(TO_CHAR(orls.TOTAL_ITEM_PACKAGE_COUNT,'999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')) 																PACKAGE_COUNT,
		
		(SELECT LISTAGG(SHS_STATUS_CANC.STATUS_VALUE_GID,'/') WITHIN GROUP (ORDER BY SHS_STATUS_CANC.SHIPMENT_GID)
				FROM SHIPMENT_STATUS SHS_STATUS_CANC
				WHERE SHS_STATUS_CANC.SHIPMENT_GID = VORLS.SHIPMENT_GID 
				AND SHS_STATUS_CANC.STATUS_TYPE_GID = 'UGO.TRANSPORT CANCELLATION'
		)																																						CANCELATION_STATUS,
		
		/* (SELECT CASE WHEN MAX(IESH_EVENT_DELIVER.INSERT_DATE) IS NULL THEN 'NOT CANCELLED' ELSE 'CANCELLED' END
		FROM
		SHIPMENT SH_EVENT_DELIVER 
				LEFT OUTER JOIN SS_STATUS_HISTORY SSSH_EVENT_DELIVER ON (SH_EVENT_DELIVER.SHIPMENT_GID = SSSH_EVENT_DELIVER.SHIPMENT_GID)
				LEFT OUTER JOIN IE_SHIPMENTSTATUS IESH_EVENT_DELIVER ON (SSSH_EVENT_DELIVER.I_TRANSACTION_NO = IESH_EVENT_DELIVER.I_TRANSACTION_NO 
				AND IESH_EVENT_DELIVER.STATUS_CODE_GID IN ('UGO.CA'))
				/* LEFT OUTER JOIN BS_STATUS_CODE BSSC_EVENT_DELIVER ON (IESH_EVENT_DELIVER.STATUS_CODE_GID = BSSC_EVENT_DELIVER.BS_STATUS_CODE_GID) 
		WHERE
		SH_EVENT_DELIVER.SHIPMENT_GID = VORLS.SHIPMENT_GID
		) AS																																					CANCELATION_STATUS,	 */	
				
				
				
				
		(SELECT SH_TEMP.INSERT_USER
		FROM SHIPMENT SH_TEMP
		WHERE SH_TEMP.SHIPMENT_GID = VORLS.SHIPMENT_GID
		) AS																																					SH_INSERT_USER,
		(SELECT LISTAGG(II.INVOICE_NUMBER,'/') WITHIN GROUP (ORDER BY ORLS.ORDER_RELEASE_GID)
		FROM INVOICE II 
		WHERE II.INVOICE_GID IN
		(SELECT ILCR.INVOICE_GID
		FROM ORDER_RELEASE_LINE ORLSL_TEMP,
			INVOICE_LINEITEM_COST_REF ILCR
			
		WHERE ORLSL_TEMP.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
			AND ORLSL_TEMP.ORDER_RELEASE_GID = ORLS.ORDER_RELEASE_GID)
		
		) 																																						INVOICE_NUMBERS,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				group by
				iv_sh.shipment_gid,
		orls.ORDER_RELEASE_GID,
		OR_LINE.ORDER_RELEASE_LINE_GID,
		INV_LINE.ACCESSORIAL_CODE_GID,
		INV_LINE.INVOICE_GID,
		INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_BAS' or temp.ACCESSORIAL_CODE_GID is null)
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												BASE_COST_BAS,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and (orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_BAS' or orl_temp.ACCESSORIAL_CODE_GID is null)
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO

)																																													BASE_COST_BAS_NI,


trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_BAF')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												BAF,

(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_BAF'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO

)																																													BAF_NI,



trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DTHC')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												DTHC,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DTHC'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													DTHC_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_OTHC')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												OTHC,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_OTHC'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													OTHC_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_INLAND_ORIGIN')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												INLAND_ORIGIN,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_INLAND_ORIGIN'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													INLAND_ORIGIN_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID in ('UGO.UGO_INLAND_DESTINATION','UGO_DESTINATION_INLAND'))
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												INLAND_DESTINATION,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and (orl_temp.ACCESSORIAL_CODE_GID in ('UGO.UGO_INLAND_DESTINATION','UGO_DESTINATION_INLAND'))
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													INLAND_DESTINATION_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_FCL_FREIGHT_COST_CORRECTION')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												FCL_FREIGHTCOST_CORR,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_FCL_FREIGHT_COST_CORRECTION'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													FCL_FREIGHTCOST_CORR_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_ADDITIONAL_DISTANCE')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												ADDITIONAL_DISTANCE,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_ADDITIONAL_DISTANCE'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													ADDITIONAL_DISTANCE_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_ALL_IN_RATE')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_ALL_IN_RATE,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_ALL_IN_RATE'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													UGO_ALL_IN_RATE_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_CANCELLATION_COST')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_CANCELLATION_COST,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_CANCELLATION_COST'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													UGO_CANCELLATION_COST_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_CONTAINER_COOLING')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_CONTAINER_COOLING,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_CONTAINER_COOLING'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													UGO_CONTAINER_COOLING_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_CREDIT_NOTE')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_CREDIT_NOTE,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_CREDIT_NOTE'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													UGO_CREDIT_NOTE_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_CUSTOM_CLEARANCE_EXPORT')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_CUSTOM_CLEARANCE_EXPORT,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_CUSTOM_CLEARANCE_EXPORT'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													UGO_CUSTOM_CLEARANCE_EXP_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_CUSTOM_CLEARANCE_IMPORT')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_CUSTOM_CLEARANCE_IMPORT,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_CUSTOM_CLEARANCE_IMPORT'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													UGO_CUSTOM_CLEARANCE_IMP_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DEMURRAGE_AT_CUSTOMS')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_DEMURRAGE_AT_CUSTOMS,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DEMURRAGE_AT_CUSTOMS'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													UGO_DEMURRAGE_AT_CUST_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DEMURRAGE_AT_TERMINAL')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_DEMURRAGE_AT_TERMINAL,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DEMURRAGE_AT_TERMINAL'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													DEMURRAGE_AT_TERMINAL_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DEMURRAGE_AT_THE_PORT')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_DEMURRAGE_AT_THE_PORT,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DEMURRAGE_AT_THE_PORT'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													DEMURRAGE_AT_THE_PORT_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DEMURRAGE_LOADING_COST')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_DEMURRAGE_LOADING_COST,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DEMURRAGE_LOADING_COST'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													DEMURRAGE_LOADING_COST_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DEMURRAGE_UNLOADING_COST')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_DEMURRAGE_UNLOADING_COST,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DEMURRAGE_UNLOADING_COST'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													DEMURRAGE_UNLOADING_COST_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DETENTION')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_DETENTION,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DETENTION'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													UGO_DETENTION_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DG_SURCHARGE')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_DG_SURCHARGE,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DG_SURCHARGE'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													UGO_DG_SURCHARGE_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DOCUMENTATION_COST')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_DOCUMENTATION_COST,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_DOCUMENTATION_COST'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													UGO_DOCUMENTATION_COST_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_PICK_UP_FEE')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_PICK_UP_FEE,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_PICK_UP_FEE'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													UGO_PICK_UP_FEE_NI,

trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_STORAGE_COSTS')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_STORAGE_COSTS,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_STORAGE_COSTS'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													UGO_STORAGE_COSTS_NI,
trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_TERMINAL_HANDLING_COST')
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												UGO_TERMINAL_HANDLING_COST,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID = 'UGO.UGO_TERMINAL_HANDLING_COST'
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													TERMINAL_HANDLING_COST_NI,
trim((select to_char(sum(temp.suma),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')
from
(SELECT distinct iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
INV_LINE.INVOICE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.LINEITEM_SEQ_NO,

SUM(distinct CASE
				WHEN (INV_LINE.FREIGHT_CHARGE_GID = 'EUR' or INV_LINE.FREIGHT_CHARGE_GID is null) THEN INV_LINE.FREIGHT_CHARGE
				when INV_LINE.FREIGHT_CHARGE_GID <> 'EUR' then INV_LINE.FREIGHT_CHARGE * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,INV_LINE.FREIGHT_CHARGE_GID,'EUR')
				END)/
				(SELECT CASE WHEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)> 0 THEN COUNT(DISTINCT ILREF_TEMP.COST_REFERENCE_GID)
				ELSE 1
				END
				
				FROM
					INVOICE_LINEITEM_COST_REF ILREF_TEMP,
					INVOICE_LINEITEM inv_line_2
					
				WHERE
				 ILREF_TEMP.INVOICE_GID = INV_LINE.INVOICE_GID
				 and inv_line_2.INVOICE_GID = INV_LINE.INVOICE_GID
				 and ILREF_TEMP.INVOICE_GID = inv_line_2.INVOICE_GID
				 and nvl(inv_line_2.ACCESSORIAL_CODE_GID,'BASE') = (case when INV_LINE.ACCESSORIAL_CODE_GID is not null THEN INV_LINE.ACCESSORIAL_CODE_GID
				 ELSE 'BASE' END)
				 and ILREF_TEMP.LINEITEM_SEQ_NO = inv_line_2.LINEITEM_SEQ_NO
				 and ILREF_TEMP.LINEITEM_SEQ_NO = INV_LINE.LINEITEM_SEQ_NO
)
				as suma

				FROM invoice_shipment iv_sh,
				INVOICE_LINEITEM INV_LINE,
				ORDER_RELEASE_LINE OR_LINE,
				INVOICE_LINEITEM_COST_REF ILCR,
				shipment sh_2,
				view_shipment_order_release vsor,
				order_release orls
				
				WHERE 

				 OR_LINE.ORDER_RELEASE_LINE_GID = ILCR.COST_REFERENCE_GID
				and iv_sh.shipment_gid = sh_2.shipment_gid
				/* and sh_2.shipment_gid ='UGO.10012503' */
				/* and sh_2.shipment_gid = sh.shipment_gid */
				and vsor.shipment_gid = sh_2.shipment_gid
				and orls.ORDER_RELEASE_GID = vsor.ORDER_RELEASE_GID
				 and iv_sh.invoice_gid = INV_LINE.INVOICE_GID
				and INV_LINE.LINEITEM_SEQ_NO = ILCR.LINEITEM_SEQ_NO
				and ILCR.INVOICE_GID = INV_LINE.INVOICE_GID
				AND OR_LINE.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
				/* AND	(INV_LINE.ACCESSORIAL_CODE_GID ='UGO.UGO_OTHC') */
				group by
				iv_sh.shipment_gid,
orls.ORDER_RELEASE_GID,
OR_LINE.ORDER_RELEASE_LINE_GID,
INV_LINE.ACCESSORIAL_CODE_GID,
INV_LINE.INVOICE_GID,
INV_LINE.LINEITEM_SEQ_NO) temp
where (temp.ACCESSORIAL_CODE_GID in ('UGO.UGO_CONTAINER_STUFFING_DESTUFFING','UGO_OVERWEIGHT_SURCHARGE'))
and temp.ORDER_RELEASE_LINE_GID = ORLSL.ORDER_RELEASE_LINE_GID
))	 																																												OTHER,
(select sum(CASE
				WHEN (orl_temp.COST_CURRENCY_GID = 'EUR' or orl_temp.COST_CURRENCY_GID is null) THEN orl_temp.COST
				when orl_temp.COST_CURRENCY_GID <> 'EUR' then orl_temp.COST * 
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sh.start_time,orl_temp.COST_CURRENCY_GID,'EUR')
				END)

from ALLOCATION_OR_LINE_D orl_temp,
ORDER_RELEASE_LINE  or_line,
allocation_base all_b


where orl_temp.ORDER_RELEASE_LINE_GID = OR_LINE.ORDER_RELEASE_LINE_GID
and orl_temp.ACCESSORIAL_CODE_GID IN ('UGO.UGO_CONTAINER_STUFFING_DESTUFFING','UGO_OVERWEIGHT_SURCHARGE')
and or_line.ORDER_RELEASE_LINE_gid  = orl_temp.ORDER_RELEASE_LINE_gid
and or_line.order_release_gid = orls.order_release_gid
and all_b.SHIPMENT_GID = sh.shipment_gid
and all_b.ALLOC_SEQ_NO = orl_temp.ALLOC_SEQ_NO
)																																													OTHER_NI,

(select orls_ref.ORDER_RELEASE_REFNUM_VALUE
from order_release_refnum orls_ref
where orls_ref.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
and orls_ref.ORDER_RELEASE_REFNUM_QUAL_GID = 'UGO.UGO_ORIGIN_PAYER'

) 																													UGO_ORIGIN_PAYER,
(select orls_ref.ORDER_RELEASE_REFNUM_VALUE
from order_release_refnum orls_ref
where orls_ref.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
and orls_ref.ORDER_RELEASE_REFNUM_QUAL_GID = 'UGO.UGO_DEST_PAYER'

) 																													UGO_DEST_PAYER,	
(select orls_ref.ORDER_RELEASE_REFNUM_VALUE
from order_release_refnum orls_ref
where orls_ref.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
and orls_ref.ORDER_RELEASE_REFNUM_QUAL_GID = 'ULE.ULE_GLN'

) 																													GLN,	
(select orls_ref.ORDER_RELEASE_REFNUM_VALUE
from order_release_refnum orls_ref
where orls_ref.ORDER_RELEASE_GID = orls.ORDER_RELEASE_GID
and orls_ref.ORDER_RELEASE_REFNUM_QUAL_GID = 'ULE.ULE_COST CENTER'

) 																													COST_CENTER,
(select ss.STATUS_VALUE_GID
from shipment_status ss
where ss.SHIPMENT_GID = sh.SHIPMENT_GID
and ss.STATUS_TYPE_GID ='UGO.TRANSPORT CANCELLATION'

)																													CANCELLATION_STATUS




FROM
ORDER_RELEASE ORLS,
SHIPMENT SH,
ORDER_RELEASE_LINE ORLSL,
/* ALLOCATION_OR_LINE_D AOLD, */
VIEW_SHIPMENT_ORDER_RELEASE VORLS

/* INVOICE_LINEITEM_COST_REF ILCR, */
/* INVOICE_LINEITEM IVLI */


WHERE
ORLS.ORDER_RELEASE_GID=ORLSL.ORDER_RELEASE_GID
AND SH.SHIPMENT_GID = VORLS.SHIPMENT_GID
/* AND ORLSL.ORDER_RELEASE_LINE_GID = AOLD.ORDER_RELEASE_LINE_GID */
AND VORLS.ORDER_RELEASE_GID = ORLS.ORDER_RELEASE_GID
AND ORLS.DOMAIN_NAME='UGO'
AND (SELECT SH_TEMP.TRANSPORT_MODE_GID
		FROM SHIPMENT SH_TEMP
		WHERE SH_TEMP.SHIPMENT_GID = VORLS.SHIPMENT_GID
		
		)	IN ('UL_OCEAN','UL_LCL')

/* AND ILCR.COST_REFERENCE_GID = ORLSL.ORDER_RELEASE_LINE_GID */
/* AND IVLI.INVOICE_GID = ILCR.INVOICE_GID */
/* and ILCR.LINEITEM_SEQ_NO = IVLI.LINEITEM_SEQ_NO */
/* AND IVLI.INVOICE_GID IS NOT NULL */


/* AND SH.START_TIME BETWEEN TO_DATE('01-07-2014','DD-MM-YYYY') AND TO_DATE('01-08-2014','DD-MM-YYYY') */

/* AND	SH.START_TIME BETWEEN TRUNC(TRUNC(TRUNC(TRUNC(SYSDATE,'MM')-1,'MM')-1,'MM')-1,'MM')  AND TRUNC(SYSDATE,'MM') -- PREV 3 MONTHS MAX */
 
/* AND(SH.END_TIME BETWEEN TO_DATE(:INSERT_DATE_FROM,:P_DATE_TIME_FORMAT) AND TO_DATE(:INSERT_DATE_TO,:P_DATE_TIME_FORMAT) and ORLS.ORDER_RELEASE_TYPE_GID = 'INBOUND')
AND(SH.START_TIME BETWEEN TO_DATE(:INSERT_DATE_FROM,:P_DATE_TIME_FORMAT) AND TO_DATE(:INSERT_DATE_TO,:P_DATE_TIME_FORMAT) and  ORLS.ORDER_RELEASE_TYPE_GID = 'OUTBOUND') */

/* AND
(
CASE 
WHEN (ORLS.ORDER_RELEASE_TYPE_GID = 'INBOUND')
THEN SH.END_TIME
ELSE SH.START_TIME
END 
) >= TO_DATE('2014-10-01','YYYY-MM-DD')
AND
(
CASE 
WHEN (ORLS.ORDER_RELEASE_TYPE_GID = 'INBOUND')
THEN SH.END_TIME
ELSE SH.START_TIME
END 
) <= TO_DATE('2014-10-31','YYYY-MM-DD')

AND
(
CASE 
WHEN (ORLS.ORDER_RELEASE_TYPE_GID = 'INBOUND')
THEN trunc(SH.END_TIME)
ELSE trunc(SH.START_TIME)
END 
) <= trunc(TO_DATE('2014-10-01','YYYY-MM-DD'))+100 */


AND
(
CASE 
WHEN (ORLS.ORDER_RELEASE_TYPE_GID = 'INBOUND')
THEN SH.END_TIME
ELSE SH.START_TIME
END 
) >= TO_DATE(:INSERT_DATE_FROM,:P_DATE_TIME_FORMAT)
AND
(
CASE 
WHEN (ORLS.ORDER_RELEASE_TYPE_GID = 'INBOUND')
THEN SH.END_TIME
ELSE SH.START_TIME
END 
) <= TO_DATE(:INSERT_DATE_TO,:P_DATE_TIME_FORMAT)

AND
(
CASE 
WHEN (ORLS.ORDER_RELEASE_TYPE_GID = 'INBOUND')
THEN trunc(SH.END_TIME)
ELSE trunc(SH.START_TIME)
END 
) <= trunc(TO_DATE(:INSERT_DATE_FROM,:P_DATE_TIME_FORMAT))+100
/* and sh.shipment_gid in ('UGO.10002860') */

/* and trunc(sh.start_time) <= trunc(TO_DATE(:INSERT_DATE_FROM,:P_DATE_TIME_FORMAT))+100 */
/* AND VORLS.SHIPMENT_GID ='UGO.10002860' */





]]> 
 </sqlStatement> 
 
 </dataQuery>
 <dataStructure> 
 <group name="Q_QUERY" dataType="varchar2" source="Q_QUERY">
   <element name="SHIPMENT_START_DATE" dataType="varchar2" value="SHIPMENT_START_DATE" />
   <element name="OR_LINE_ID" dataType="varchar2" value="OR_LINE_ID" />
   <element name="OR_ID" dataType="varchar2" value="OR_ID" />
   <element name="SH_GID" dataType="varchar2" value="SH_GID" />
   <element name="CATEGORY" dataType="varchar2" value="CATEGORY" />
   <element name="MATERIAL" dataType="varchar2" value="MATERIAL" />
   <element name="TRANSPORT_MODE" dataType="varchar2" value="TRANSPORT_MODE" />
   <element name="INB_OUTB" dataType="varchar2" value="INB_OUTB" />
   <element name="INCOTERM" dataType="varchar2" value="INCOTERM" />
   <element name="CARRIAGE_CONDITION" dataType="varchar2" value="CARRIAGE_CONDITION" />
   <element name="CONSIGNOR_ID" dataType="varchar2" value="CONSIGNOR_ID" />
   <element name="CONSIGNOR_NAME" dataType="varchar2" value="CONSIGNOR_NAME" />
   <element name="CONSIGNOR_CITY" dataType="varchar2" value="CONSIGNOR_CITY" />
   <element name="CONSIGNOR_COUNTRY" dataType="varchar2" value="CONSIGNOR_COUNTRY" />
   <element name="CONSIGNEE_ID" dataType="varchar2" value="CONSIGNEE_ID" />
   <element name="CONSIGNEE_NAME" dataType="varchar2" value="CONSIGNEE_NAME" />
   <element name="CONSIGNEE_CITY" dataType="varchar2" value="CONSIGNEE_CITY" />
   <element name="CONSIGNEE_COUNTRY" dataType="varchar2" value="CONSIGNEE_COUNTRY" />
   <element name="SOURCE_LOCATION_ID" dataType="varchar2" value="SOURCE_LOCATION_ID" />
   <element name="SOURCE_LOC_NAME" dataType="varchar2" value="SOURCE_LOC_NAME" />
   <element name="SOURCE_LOC_CITY" dataType="varchar2" value="SOURCE_LOC_CITY" />
   <element name="SOURCE_LOC_COUNTRY" dataType="varchar2" value="SOURCE_LOC_COUNTRY" />
   <element name="POL" dataType="varchar2" value="POL" />
   <element name="POL_NAME" dataType="varchar2" value="POL_NAME" />
   <element name="POL_CITY" dataType="varchar2" value="POL_CITY" />
   <element name="POL_COUNTRY" dataType="varchar2" value="POL_COUNTRY" />
   <element name="POD" dataType="varchar2" value="POD" />
   <element name="POD_NAME" dataType="varchar2" value="POD_NAME" />
   <element name="POD_CITY" dataType="varchar2" value="POD_CITY" />
   <element name="POD_COUNTRY" dataType="varchar2" value="POD_COUNTRY" />
   <element name="SOURCE_LOCATION_ID" dataType="varchar2" value="SOURCE_LOCATION_ID" />
   <element name="DEST_LOC_NAME" dataType="varchar2" value="DEST_LOC_NAME" />
   <element name="DEST_LOC_CITY" dataType="varchar2" value="DEST_LOC_CITY" />
   <element name="DEST_LOC_COUNTRY" dataType="varchar2" value="DEST_LOC_COUNTRY" />
   <element name="TRANSPORT_CONDITION" dataType="varchar2" value="TRANSPORT_CONDITION" />
   <element name="EQUIPMENT_GR" dataType="varchar2" value="EQUIPMENT_GR" />
   <element name="SERVPROV_ID" dataType="varchar2" value="SERVPROV_ID" />
   <element name="SERVPROV_NAME" dataType="varchar2" value="SERVPROV_NAME" />
   <element name="GROSS_WEIGHT_KG" dataType="varchar2" value="GROSS_WEIGHT_KG" />
   <element name="PACKAGE_COUNT" dataType="varchar2" value="PACKAGE_COUNT" />
   <element name="CANCELATION_STATUS" dataType="varchar2" value="CANCELATION_STATUS" />
   <element name="SH_INSERT_USER" dataType="varchar2" value="SH_INSERT_USER" />
   <element name="INVOICE_NUMBERS" dataType="varchar2" value="INVOICE_NUMBERS" />
   <element name="BASE_COST_BAS" dataType="varchar2" value="BASE_COST_BAS" />
   <element name="BASE_COST_BAS_NI" dataType="varchar2" value="BASE_COST_BAS_NI" />
   <element name="BAF" dataType="varchar2" value="BAF" />
   <element name="BAF_NI" dataType="varchar2" value="BAF_NI" />
   <element name="DTHC" dataType="varchar2" value="DTHC" />
   <element name="DTHC_NI" dataType="varchar2" value="DTHC_NI" />
   <element name="OTHC" dataType="varchar2" value="OTHC" />
   <element name="INLAND_ORIGIN" dataType="varchar2" value="INLAND_ORIGIN" />
   <element name="INLAND_DESTINATION" dataType="varchar2" value="INLAND_DESTINATION" />
   <element name="FCL_FREIGHTCOST_CORR" dataType="varchar2" value="FCL_FREIGHTCOST_CORR" />
   <element name="ADDITIONAL_DISTANCE" dataType="varchar2" value="ADDITIONAL_DISTANCE" />
   <element name="UGO_ALL_IN_RATE" dataType="varchar2" value="UGO_ALL_IN_RATE" />
   <element name="UGO_CANCELLATION_COST" dataType="varchar2" value="UGO_CANCELLATION_COST" />
   <element name="UGO_CONTAINER_COOLING" dataType="varchar2" value="UGO_CONTAINER_COOLING" />
   <element name="UGO_CREDIT_NOTE" dataType="varchar2" value="UGO_CREDIT_NOTE" />
   <element name="UGO_CUSTOM_CLEARANCE_EXPORT" dataType="varchar2" value="UGO_CUSTOM_CLEARANCE_EXPORT" />
   <element name="UGO_CUSTOM_CLEARANCE_IMPORT" dataType="varchar2" value="UGO_CUSTOM_CLEARANCE_IMPORT" />
   <element name="UGO_DEMURRAGE_AT_CUSTOMS" dataType="varchar2" value="UGO_DEMURRAGE_AT_CUSTOMS" />
   <element name="UGO_DEMURRAGE_AT_TERMINAL" dataType="varchar2" value="UGO_DEMURRAGE_AT_TERMINAL" />
   <element name="UGO_DEMURRAGE_AT_THE_PORT" dataType="varchar2" value="UGO_DEMURRAGE_AT_THE_PORT" />
   <element name="UGO_DEMURRAGE_LOADING_COST" dataType="varchar2" value="UGO_DEMURRAGE_LOADING_COST" />
   <element name="UGO_DEMURRAGE_UNLOADING_COST" dataType="varchar2" value="UGO_DEMURRAGE_UNLOADING_COST" />
   <element name="UGO_DETENTION" dataType="varchar2" value="UGO_DETENTION" />
   <element name="UGO_DG_SURCHARGE" dataType="varchar2" value="UGO_DG_SURCHARGE" />
   <element name="UGO_DOCUMENTATION_COST" dataType="varchar2" value="UGO_DOCUMENTATION_COST" />
   <element name="UGO_PICK_UP_FEE" dataType="varchar2" value="UGO_PICK_UP_FEE" />
   <element name="UGO_STORAGE_COSTS" dataType="varchar2" value="UGO_STORAGE_COSTS" />
   <element name="UGO_TERMINAL_HANDLING_COST" dataType="varchar2" value="UGO_TERMINAL_HANDLING_COST" />
   <element name="OTHER" dataType="varchar2" value="OTHER" />
   <element name="UGO_ORIGIN_PAYER" dataType="varchar2" value="UGO_ORIGIN_PAYER" />
   <element name="UGO_DEST_PAYER" dataType="varchar2" value="UGO_DEST_PAYER" />
   <element name="GLN" dataType="varchar2" value="GLN" />
   <element name="COST_CENTER" dataType="varchar2" value="COST_CENTER" />
   <element name="CANCELLATION_STATUS" dataType="varchar2" value="CANCELLATION_STATUS" />

 </group>

  
  </dataStructure>
  </dataTemplate>