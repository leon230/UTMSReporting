SELECT /*+ leading(sh) full(sh) */ to_char(sh.insert_date,'dd-mm-yyyy') "Shipment Insert Date",
to_char(sh_stop_pick.planned_arrival,'MONTH') "Pickup Planned Arrival Month",
to_char(sh_stop_pick.planned_arrival,'IW') "Pickup Planned Arrival Week",
to_char(sh_stop_del.planned_arrival,'MONTH') "Delivery Planned Arriva Month",
to_char(sh_stop_del.planned_arrival,'IW') "Delivery Planned Arriva Week",
 to_char(sh.start_time,'DD-MM-YYYY') "Shipment Start Time",
 to_char(sh.end_time,'DD-MM-YYYY') "Shipment End Time",
sh_ref_reg.SHIPMENT_REFNUM_VALUE "Functional Region",
sh_ref_col371.SHIPMENT_REFNUM_VALUE "Ule/Pr.Or_Rel_Atr",
sh.SHIPMENT_GID "Shipment GID",
ord_rel.ORDER_RELEASE_XID ,
sh.SERVPROV_GID "TSP ID",
sh.SOURCE_LOCATION_GID "Pickup Location ID",
pic_loc.CITY "Pickup City",
pic_loc.country_code3_gid pickup_country,
sh.DEST_LOCATION_GID "Delivery Location ID",
del_loc.CITY "Delivery City",
del_loc.country_code3_gid delivery_country,
ord_rel_ref_col652.ORDER_RELEASE_REFNUM_VALUE "Material_Type",
ord_rel_ref_col653.ORDER_RELEASE_REFNUM_VALUE "Material_Category",
to_char(round(sum(CASE
 WHEN ord_rel.TOTAL_WEIGHT_UOM_CODE = 'LB' THEN ord_rel.TOTAL_WEIGHT*0.45359237
 WHEN ord_rel.TOTAL_WEIGHT_UOM_CODE = 'MTON' THEN ord_rel.TOTAL_WEIGHT*1000
 WHEN ord_rel.TOTAL_WEIGHT_UOM_CODE = 'TON' THEN ord_rel.TOTAL_WEIGHT*1000
 WHEN ord_rel.TOTAL_WEIGHT_UOM_CODE = 'GRM' THEN ord_rel.TOTAL_WEIGHT/1000
 ELSE ord_rel.TOTAL_WEIGHT
END),2),'999999999D99','NLS_NUMERIC_CHARACTERS = '', ''') "Total Weight KG Or",
sh.FIRST_EQUIPMENT_GROUP_GID ,
to_char(sum(nvl(round((select sum(al_ord_rel_d1.COST) from allocation_order_release_d al_ord_rel_d1
WHERE al_ord_rel_d1.COST_TYPE_GID <> 'O' and al_ord_rel_d1.order_release_gid = ord_rel.order_release_gid and (al_ord_rel_d1.accessorial_code_gid is null or rpt_general.f_remove_domain(al_ord_rel_d1.accessorial_code_gid) IN ('ULE_MYTO','ULE_TOLL','ULE_FTL FREIGHT COST CORRECTION','ULE_BONUS_MALUS','ULE_LTL FREIGHT COSTS CORRECTION','HAZARDOUS','ULE_FREIGHT COST BASIC LTL PER PALLET','ULE_FREIGHT COST BASIC FTL','ULE_TANK_CHASSIS HIRE','ULE_FTL FREIGHT COST CORRECTION','ULE_LTL FREIGHT COSTS CORRECTION','ULE_FREIGHT COST BASIC FTL','ULE_FREIGHT COST BASIC LTL PER PALLET','ULE_BONUS_MALUS','ULE_TOLL'))
group by al_ord_rel_d1.order_release_gid),2),0)),'999999999D99','NLS_NUMERIC_CHARACTERS = '', ''') "Total Ord Cost Base",
sh.CURRENCY_GID ,
to_char(sum(nvl(round((select sum(CASE
    WHEN al_ord_rel_d1.COST_CURRENCY_GID = 'EUR' THEN al_ord_rel_d1.COST
    ELSE al_ord_rel_d1.COST * UNILEVER.EBS_PROCEDURES_ULE.GET_QUARTERLY_EX_RATE(al_ord_rel_d1.INSERT_DATE,al_ord_rel_d1.COST_CURRENCY_GID,'EUR')
   END) from allocation_order_release_d al_ord_rel_d1
WHERE al_ord_rel_d1.COST_TYPE_GID <> 'O' and al_ord_rel_d1.order_release_gid = ord_rel.order_release_gid
group by al_ord_rel_d1.order_release_gid),2),0)),'999999999D99','NLS_NUMERIC_CHARACTERS = '', ''') "Total Ord Cost EUR",
ord_rel_ref_col651.ORDER_RELEASE_REFNUM_VALUE "Transport_Condition",
(SELECT bs_rc1.DESCRIPTION
FROM
SS_STATUS_HISTORY ss_stat1
join IE_SHIPMENTSTATUS ie_ss1 on ss_stat1.i_transaction_no = ie_ss1.i_transaction_no
join BS_REASON_CODE bs_rc1 on ie_ss1.status_reason_code_gid = bs_rc1.bs_reason_code_gid
WHERE
bs_rc1.BS_REASON_CODE_GID IN ('ULE/PR.0024','ULE/PR.0025','ULE/PR.0026','ULE/PR.0027','ULE/PR.0047','ULE/PR.0028','ULE.EXP_DEL','ULE/PR.3P_NON_CONF')
and rownum = 1
and ss_stat1.SHIPMENT_GID = sh.SHIPMENT_GID) "Spot Reason Code",
to_char(sum(ord_rel.TOTAL_SHIP_UNIT_COUNT),'999999999D99','NLS_NUMERIC_CHARACTERS = '', ''') "Total Number of Pallets Or",
sh.INSERT_USER ,
sh.PLANNED_RATE_GEO_GID 
FROM
SHIPMENT sh
  join LOCATION pic_loc on sh.source_location_gid = pic_loc.location_gid
  join LOCATION del_loc on sh.dest_location_gid = del_loc.location_gid
 left outer join SHIPMENT_REFNUM  sh_ref_col371 on sh.shipment_gid = sh_ref_col371.shipment_gid and sh_ref_col371.shipment_refnum_qual_gid='ULE/PR.ULE_OR_REL_ATR'
 left outer join SHIPMENT_REFNUM  sh_ref_reg on sh.shipment_gid = sh_ref_reg.shipment_gid and sh_ref_reg.shipment_refnum_qual_gid='ULE.ULE_FUNCTIONAL_REGION'
  join SHIPMENT_STOP sh_stop_pick on sh_stop_pick.shipment_gid = sh.shipment_gid and sh_stop_pick.stop_num='1'
  join SHIPMENT_STOP sh_stop_del on sh_stop_del.shipment_gid = sh.shipment_gid and sh_stop_del.stop_num = sh.num_stops
  join ORDER_MOVEMENT ord_mov on sh.shipment_gid = ord_mov.shipment_gid
  join ORDER_RELEASE ord_rel on ord_mov.order_release_gid = ord_rel.order_release_gid
 left outer join ORDER_RELEASE_REFNUM ord_rel_ref_col651 on ord_rel.order_release_gid = ord_rel_ref_col651.order_release_gid and ord_rel_ref_col651.order_release_refnum_qual_gid='ULE.ULE_TRANSPORT_CONDITION'
 left outer join ORDER_RELEASE_REFNUM ord_rel_ref_col652 on ord_rel.order_release_gid = ord_rel_ref_col652.order_release_gid and ord_rel_ref_col652.order_release_refnum_qual_gid='ULE.ULE_MATERIAL_TYPE'
 left outer join ORDER_RELEASE_REFNUM ord_rel_ref_col653 on ord_rel.order_release_gid = ord_rel_ref_col653.order_release_gid and ord_rel_ref_col653.order_release_refnum_qual_gid='ULE.ULE_MATERIAL_CATEGORY'
WHERE
sh.IS_SPOT_COSTED ='Y'
and
sh.INSERT_DATE > to_date('01-01-2016','dd-mm-yyyy')
and sh.INSERT_DATE < to_date('01-01-2017','dd-mm-yyyy')
and
case when sh.domain_name='ULE/PR' and not exists (select 1
  from SHIPMENT_REFNUM sh_ref1
  where sh_ref1.shipment_refnum_qual_gid='ULE.ULE_SHIPMENT_STREAM' and sh_ref1.shipment_refnum_value='SECONDARY' and sh.shipment_gid = sh_ref1.shipment_gid) then 1 else 0 end =1
and
case 
  when exists(select 1 from SHIPMENT_STATUS sh_stat1 where rpt_general.f_remove_domain(sh_stat1.status_type_gid)='TRANSPORT CANCELLATION' and rpt_general.f_remove_domain(sh_stat1.status_value_gid)='CANCELLED' and sh.shipment_gid = sh_stat1.shipment_gid) then 'Cancelled' 
  else 'Not Cancelled'
end ='Not Cancelled'


GROUP BY
sh.SHIPMENT_GID,
sh.SOURCE_LOCATION_GID,
pic_loc.CITY,
sh.DEST_LOCATION_GID,
del_loc.CITY,
 to_char(sh.start_time,'DD-MM-YYYY'),
 to_char(sh.end_time,'DD-MM-YYYY'),
sh.SERVPROV_GID,
sh.FIRST_EQUIPMENT_GROUP_GID,
sh.PLANNED_RATE_GEO_GID,
sh.CURRENCY_GID,
sh.INSERT_USER,
to_char(sh.insert_date,'dd-mm-yyyy'),
sh_ref_reg.SHIPMENT_REFNUM_VALUE,
sh_ref_col371.SHIPMENT_REFNUM_VALUE,
ord_rel.ORDER_RELEASE_XID,
ord_rel_ref_col651.ORDER_RELEASE_REFNUM_VALUE,
ord_rel_ref_col652.ORDER_RELEASE_REFNUM_VALUE,
ord_rel_ref_col653.ORDER_RELEASE_REFNUM_VALUE,
to_char(sh_stop_pick.planned_arrival,'MONTH'),
to_char(sh_stop_pick.planned_arrival,'IW'),
to_char(sh_stop_del.planned_arrival,'MONTH'),
to_char(sh_stop_del.planned_arrival,'IW'),
pic_loc.country_code3_gid,
del_loc.country_code3_gid