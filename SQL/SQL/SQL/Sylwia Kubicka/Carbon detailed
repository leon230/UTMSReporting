SELECT distinct
	to_char(sh.END_TIME, 'MM-YYYY')                                                  														Shipment_Delivery_Month,
	to_char(sh.END_TIME, 'YYYY') 																								   		Shipment_Delivery_Year,
	sh.shipment_xid 																												   	Shipment_Number,
	nvl(rpt_general.f_remove_domain(sh.FIRST_EQUIPMENT_GROUP_GID),'n/a')																Shipment_Equipment_Type,


	orls.order_release_xid 																											   	Order_Number,
	sh_source.location_xid 																										   		SH_Source_ID,
	sh_dest.location_xid 																										   		SH_Dest_ID,
	sh.TRANSPORT_MODE_GID 																											   	Shipment_Transport_Mode,

	(SELECT nvl(listagg(orr_trans_cond.ORDER_RELEASE_REFNUM_VALUE,'; ') WITHIN GROUP (ORDER BY orr_trans_cond.ORDER_RELEASE_REFNUM_VALUE),'n/a')
	FROM
		ORDER_RELEASE_REFNUM orr_trans_cond
	WHERE
		orls.ORDER_RELEASE_GID = orr_trans_cond.ORDER_RELEASE_GID
		AND orr_trans_cond.ORDER_RELEASE_REFNUM_QUAL_GID = 'ULE.ULE_TRANSPORT_CONDITION')												Transport_Condition,


	NVL(TRIM(TO_CHAR(ROUND((orls.TOTAL_WEIGHT_BASE * 0.45359237)/1000,5),'999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')),'n/a')						Order_Gross_Weight_KG,

	COALESCE(rpt_general.f_remove_domain(sh.RATE_GEO_GID),rpt_general.f_remove_domain(sh.PLANNED_RATE_GEO_GID),'n/a')					Rate_Record,

	nvl((SELECT ltrim(to_char(l_att_rd_dist.LANE_ATTRIBUTE_VALUE,'999999999D99','NLS_NUMERIC_CHARACTERS = '', '''))
		FROM
			RATE_GEO r_geo_rd_dist,
			X_LANE x_rd_dist,
			LANE_ATTRIBUTE l_att_rd_dist
		WHERE
			sh.RATE_GEO_GID = r_geo_rd_dist.RATE_GEO_GID
			AND sh.DOMAIN_NAME = 'ULE/PR'
			AND r_geo_rd_dist.X_LANE_GID = x_rd_dist.X_LANE_GID
			AND x_rd_dist.X_LANE_GID = l_att_rd_dist.X_LANE_GID
			AND l_att_rd_dist.LANE_ATTRIBUTE_DEF_GID = 'ULE.ULE_ROAD_DISTANCE'
			AND l_att_rd_dist.DOMAIN_NAME = 'ULE/PR'),'n/a')																			ROAD_DISTANCE,
	nvl((SELECT l_att_rd_eq.LANE_ATTRIBUTE_VALUE
		FROM
			RATE_GEO r_geo_rd_eq,
			X_LANE x_rd_eq,
			LANE_ATTRIBUTE l_att_rd_eq
		WHERE
			sh.RATE_GEO_GID = r_geo_rd_eq.RATE_GEO_GID
			AND sh.DOMAIN_NAME = 'ULE/PR'
			AND r_geo_rd_eq.X_LANE_GID = x_rd_eq.X_LANE_GID
			AND x_rd_eq.X_LANE_GID = l_att_rd_eq.X_LANE_GID
			AND l_att_rd_eq.LANE_ATTRIBUTE_DEF_GID = 'ULE.ULE_ROAD_EQUIPMENT_TYPE'
			AND l_att_rd_eq.DOMAIN_NAME = 'ULE/PR'),'n/a')																			    ROAD_EQUIPMENT_TYPE,
	nvl((SELECT ltrim(to_char(l_att_r_dist.LANE_ATTRIBUTE_VALUE,'999999999D99','NLS_NUMERIC_CHARACTERS = '', '''))
		FROM
			RATE_GEO r_geo_r_dist,
			X_LANE x_r_dist,
			LANE_ATTRIBUTE l_att_r_dist
		WHERE
			sh.RATE_GEO_GID = r_geo_r_dist.RATE_GEO_GID
			AND sh.DOMAIN_NAME = 'ULE/PR'
			AND r_geo_r_dist.X_LANE_GID = x_r_dist.X_LANE_GID
			AND x_r_dist.X_LANE_GID = l_att_r_dist.X_LANE_GID
			AND l_att_r_dist.LANE_ATTRIBUTE_DEF_GID = 'ULE.ULE_RAIL_DISTANCE'
			AND l_att_r_dist.DOMAIN_NAME = 'ULE/PR'),'n/a')																			    RAIL_DISTANCE,
	nvl((SELECT l_att_r_eq.LANE_ATTRIBUTE_VALUE
		FROM
			RATE_GEO r_geo_r_eq,
			X_LANE x_r_eq,
			LANE_ATTRIBUTE l_att_r_eq
		WHERE
			sh.RATE_GEO_GID = r_geo_r_eq.RATE_GEO_GID
			AND sh.DOMAIN_NAME = 'ULE/PR'
			AND r_geo_r_eq.X_LANE_GID = x_r_eq.X_LANE_GID
			AND x_r_eq.X_LANE_GID = l_att_r_eq.X_LANE_GID
			AND l_att_r_eq.LANE_ATTRIBUTE_DEF_GID = 'ULE.ULE_RAIL_EQUIPMENT_TYPE'
			AND l_att_r_eq.DOMAIN_NAME = 'ULE/PR'),'n/a')																			    RAIL_EQUIPMENT_TYPE,
	nvl((SELECT ltrim(to_char(l_att_w_dist.LANE_ATTRIBUTE_VALUE,'999999999D99','NLS_NUMERIC_CHARACTERS = '', '''))
		FROM
			RATE_GEO r_geo_w_dist,
			X_LANE x_w_dist,
			LANE_ATTRIBUTE l_att_w_dist
		WHERE
			sh.RATE_GEO_GID = r_geo_w_dist.RATE_GEO_GID
			AND sh.DOMAIN_NAME = 'ULE/PR'
			AND r_geo_w_dist.X_LANE_GID = x_w_dist.X_LANE_GID
			AND x_w_dist.X_LANE_GID = l_att_w_dist.X_LANE_GID
			AND l_att_w_dist.LANE_ATTRIBUTE_DEF_GID = 'ULE.ULE_WATER_DISTANCE'
			AND l_att_w_dist.DOMAIN_NAME = 'ULE/PR'),'n/a')																			    WATER_DISTANCE,
	nvl((SELECT l_att_w_eq.LANE_ATTRIBUTE_VALUE
		FROM
			RATE_GEO r_geo_w_eq,
			X_LANE x_w_eq,
			LANE_ATTRIBUTE l_att_w_eq
		WHERE
			sh.RATE_GEO_GID = r_geo_w_eq.RATE_GEO_GID
			AND sh.DOMAIN_NAME = 'ULE/PR'
			AND r_geo_w_eq.X_LANE_GID = x_w_eq.X_LANE_GID
			AND x_w_eq.X_LANE_GID = l_att_w_eq.X_LANE_GID
			AND l_att_w_eq.LANE_ATTRIBUTE_DEF_GID = 'ULE.ULE_WATER_EQUIPMENT_TYPE'
			AND l_att_w_eq.DOMAIN_NAME = 'ULE/PR'),'n/a')																			    WATER_EQUIPMENT_TYPE,




	(select loc.LOCATION_REFNUM_VALUE
	from location_refnum loc
	where loc.LOCATION_REFNUM_QUAL_GID = 'ULE.ULE_CATEGORY'
	and loc.location_gid = sh.source_location_gid)                                                                                Material_Category

    (select loc.LOCATION_REFNUM_VALUE
    	from location_refnum loc
    	where loc.LOCATION_REFNUM_QUAL_GID = '	ULE.ULE_CATEGORY_SMALL'
    	and loc.location_gid = sh.source_location_gid)                                                                                Material_Category_small


	(SELECT nvl(listagg(l_att_mode.LANE_ATTRIBUTE_VALUE,'; ') WITHIN GROUP (ORDER BY l_att_mode.LANE_ATTRIBUTE_VALUE),'n/a')
		FROM
			RATE_GEO r_geo_mode,
			X_LANE x_mode,
			LANE_ATTRIBUTE l_att_mode
		WHERE
			sh.RATE_GEO_GID = r_geo_mode.RATE_GEO_GID
			AND sh.DOMAIN_NAME = 'ULE/PR'
			AND r_geo_mode.X_LANE_GID = x_mode.X_LANE_GID
			AND x_mode.X_LANE_GID = l_att_mode.X_LANE_GID
			AND l_att_mode.LANE_ATTRIBUTE_DEF_GID = 'ULE.ULE_TRANSPORT_MODE'
			AND l_att_mode.DOMAIN_NAME = 'ULE/PR')																						LANE_TRANSPORT_MODE,

	(SELECT RPT_GENERAL.F_REMOVE_DOMAIN(SHS_STATUS.STATUS_VALUE_GID)
	FROM
		SHIPMENT_STATUS SHS_STATUS
	WHERE
		sh.SHIPMENT_GID = SHS_STATUS.SHIPMENT_GID AND SHS_STATUS.STATUS_TYPE_GID = 'ULE/PR.ENROUTE')									ENROUTE_STATUS_2,

	(SELECT RPT_GENERAL.F_REMOVE_DOMAIN(SHS_STATUS_CANC.STATUS_VALUE_GID)
	FROM
		SHIPMENT_STATUS SHS_STATUS_CANC
	WHERE
		sh.SHIPMENT_GID = SHS_STATUS_CANC.SHIPMENT_GID AND SHS_STATUS_CANC.STATUS_TYPE_GID = 'ULE/PR.TRANSPORT CANCELLATION')			CANCELLATION_STATUS,


	nvl((SELECT R_REF_TECH_NAME.RATE_GEO_REFNUM_VALUE
		FROM
			RATE_GEO R_GEO_TECH_NAME,
			RATE_GEO_REFNUM R_REF_TECH_NAME

		WHERE
			sh.RATE_GEO_GID = R_GEO_TECH_NAME.RATE_GEO_GID
			AND sh.DOMAIN_NAME = 'ULE/PR'
			AND R_GEO_TECH_NAME.RATE_GEO_GID = R_REF_TECH_NAME.RATE_GEO_GID
			AND R_REF_TECH_NAME.RATE_GEO_REFNUM_QUAL_GID = 'UL_TECHNOLOGY_NAME'),'n/a')													TECHNOLOGY_NAME,

	nvl((SELECT R_REF_TECH_FACT.RATE_GEO_REFNUM_VALUE
		FROM
			RATE_GEO R_GEO_TECH_FACT,
			RATE_GEO_REFNUM R_REF_TECH_FACT

		WHERE
			sh.RATE_GEO_GID = R_GEO_TECH_FACT.RATE_GEO_GID
			AND sh.DOMAIN_NAME = 'ULE/PR'
			AND R_GEO_TECH_FACT.RATE_GEO_GID = R_REF_TECH_FACT.RATE_GEO_GID
			AND R_REF_TECH_FACT.RATE_GEO_REFNUM_QUAL_GID = 'UL_TECHNOLOGY_FACTOR'),'n/a')												TECHNOLOGY_FACTOR,

	nvl((SELECT nvl(listagg(CO2_VAL.SHIPMENT_REFNUM_VALUE,'; ') WITHIN GROUP (ORDER BY CO2_VAL.SHIPMENT_REFNUM_VALUE),'n/a')
	FROM
		shipment_refnum CO2_VAL
	WHERE
		SH.SHIPMENT_GID = CO2_VAL.SHIPMENT_GID
		AND	CO2_VAL.SHIPMENT_REFNUM_QUAL_GID = 'ULE.ULE_CO2_VALUE'),'n/a')																CO2_VALUE,

	case
		when
			(((SELECT DISTINCT
				TENDER_TYPE
			FROM
				TENDER_COLLABORATION TEN_COL_TMP
			WHERE
				TEN_COL_TMP.SHIPMENT_GID = SH.SHIPMENT_GID
				AND TEN_COL_TMP.TENDER_TYPE = 'Spot Bid') is not null)
			AND sh.RATE_GEO_GID	is null) Then 'Y'
		else 'N'
	end 																																IS_Spotsource,

	NVL((SELECT
		CASE
			WHEN sh_flatto.SHIPMENT_REFNUM_VALUE IS NOT NULL THEN 'Y'
			ELSE 'N'
		END

	FROM
		shipment_refnum sh_flatto
	WHERE
		sh.SHIPMENT_GID = sh_flatto.SHIPMENT_GID
		AND sh_flatto.SHIPMENT_REFNUM_QUAL_GID = 'ULE.ULE_XLS_UPLD_SHIPMENT_REF_NO'),'N')												IS_SH_FLATTO,


	sh_source.CITY  																													SH_SOURCE_CITY,
	sh_source.COUNTRY_CODE3_GID																											SH_SOURCE_COUNTRY,
	sh_dest.CITY																														SH_DESTINATION_CITY,
	sh_dest.COUNTRY_CODE3_GID																											SH_DESTINATION_COUNTRY,
	rpt_general.f_remove_domain(SH.SERVPROV_GID)																						SERVICE_PROVIDER_ID,
	NVL((SELECT ORIG_PFS.ORDER_RELEASE_REFNUM_VALUE
	FROM
		order_release_refnum ORIG_PFS
	WHERE
		orls.ORDER_RELEASE_GID = ORIG_PFS.ORDER_RELEASE_GID
		AND ORIG_PFS.ORDER_RELEASE_REFNUM_QUAL_GID = 'ULE.ULE_ORIGINAL_PFS'),'n/a')														ORLS_ORIGINAL_PFS,

	NVL(TRIM(TO_CHAR(sh.WEIGHT_UTILIZATION,'999999999D99')),'n/a')																		WEIGHT_UTILIZATION,
	SH.TOTAL_SHIP_UNIT_COUNT 	 																										THU_PER_SHIPMENT,
	nvl(rpt_general.f_remove_domain(orls.SOURCE_LOCATION_GID),'n/a')																	ORLS_Source_ID,
	nvl(rpt_general.f_remove_domain(orls.DEST_LOCATION_GID),'n/a')																		ORLS_Dest_ID,
	CASE
		WHEN LOADED_DISTANCE_UOM_CODE ='MI' THEN TRIM(TO_CHAR(SH.LOADED_DISTANCE*1.609344,'999999999D99'))
		ELSE TRIM(TO_CHAR(SH.LOADED_DISTANCE,'999999999D99'))||' '||LOADED_DISTANCE_UOM_CODE
	END 																																SH_DISTANCE,
	ORLS_SOURCE.LOCATION_XID																											ORLS_SOURCE_ID,
	ORLS_SOURCE.LOCATION_NAME																											ORLS_SOURCE_NAME,
	ORLS_SOURCE.CITY																													ORLS_SOURCE_CITY,
	ORLS_SOURCE.COUNTRY_CODE3_GID																										ORLS_SOURCE_COUNTRY,

	ORLS_DEST.LOCATION_XID																												ORLS_DEST_ID,
	ORLS_DEST.LOCATION_NAME																												ORLS_DEST_NAME,
	ORLS_DEST.CITY																														ORLS_DEST_CITY,
	ORLS_DEST.COUNTRY_CODE3_GID																											ORLS_DEST_COUNTRY,
	NVL((SELECT listagg(FB_NUM.ORDER_RELEASE_REFNUM_VALUE,'; ') WITHIN GROUP (ORDER BY FB_NUM.ORDER_RELEASE_REFNUM_VALUE)
	FROM
		ORDER_RELEASE_REFNUM FB_NUM
	WHERE
		orls.ORDER_RELEASE_GID = FB_NUM.ORDER_RELEASE_GID
		AND FB_NUM.ORDER_RELEASE_REFNUM_QUAL_GID = 'ULE.ULE_FINAL_BILLING_NUMBER'),'-')													FB_NUMBER,
	NVL((SELECT TO_CHAR(SS_2.ACTUAL_ARRIVAL,'YYYY-MM-DD HH24:MI:SS')
		FROM SHIPMENT_STOP SS_2
		WHERE SS_2.DOMAIN_NAME IN ('ULE/PR','ULE')
		AND SS_2.SHIPMENT_GID = SH.SHIPMENT_GID
		AND SS_2.STOP_NUM = (SELECT MAX(STOP_NUM) FROM SHIPMENT_STOP WHERE SHIPMENT_GID = SH.SHIPMENT_GID)),'-')						ACTUAL_ARRIVAL_DATE_GMT,

	NVL(TRIM(TO_CHAR(CASE
		WHEN
			(SELECT 1
			 FROM ORDER_RELEASE_REFNUM ORLSR_BULK
		     WHERE ORLS.ORDER_RELEASE_GID = ORLSR_BULK.ORDER_RELEASE_GID
			       AND ORLSR_BULK.ORDER_RELEASE_REFNUM_QUAL_GID = ('ULE.ULE_BULK')) = 1
		THEN BULK_TOTAL.COST_EUR
		ELSE NON_BULK_TOTAL.COST_EUR
	END,'999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')),'-')																			TOTAL_COST_EUR,

	NVL(TRIM(TO_CHAR(CASE
		WHEN
			(SELECT 1
			 FROM ORDER_RELEASE_REFNUM ORLSR_BULK
		     WHERE ORLS.ORDER_RELEASE_GID = ORLSR_BULK.ORDER_RELEASE_GID
			       AND ORLSR_BULK.ORDER_RELEASE_REFNUM_QUAL_GID = ('ULE.ULE_BULK')) = 1
		THEN BULK_BASE.COST_EUR
		ELSE NON_BULK_BASE.COST_EUR
	END,'999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')),'-')																			BASE_COST_EUR,

	NVL(TRIM(TO_CHAR(CASE
		WHEN
			(SELECT 1
			 FROM ORDER_RELEASE_REFNUM ORLSR_BULK
		     WHERE ORLS.ORDER_RELEASE_GID = ORLSR_BULK.ORDER_RELEASE_GID
			       AND ORLSR_BULK.ORDER_RELEASE_REFNUM_QUAL_GID = ('ULE.ULE_BULK')) = 1
		THEN BULK_FUEL.COST_EUR
		ELSE NON_BULK_FUEL.COST_EUR
	END,'999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')),'-')																			FUEL_COST_EUR,

	NVL(TRIM(TO_CHAR(CASE
		WHEN
			(SELECT 1
			 FROM ORDER_RELEASE_REFNUM ORLSR_BULK
		     WHERE ORLS.ORDER_RELEASE_GID = ORLSR_BULK.ORDER_RELEASE_GID
			       AND ORLSR_BULK.ORDER_RELEASE_REFNUM_QUAL_GID = ('ULE.ULE_BULK')) = 1
		THEN BULK_CORRECTIONS.COST_EUR
		ELSE NON_BULK_CORRECTIONS.COST_EUR
	END,'999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')),'-')																			CORRECTIONS_COST_EUR,

	NVL((SELECT rpt_general.f_remove_domain(SS_COST.STATUS_VALUE_GID)
	     FROM SHIPMENT_STATUS SS_COST
	     WHERE SH.SHIPMENT_GID = SS_COST.SHIPMENT_GID
		       AND SS_COST.STATUS_TYPE_GID = 'ULE/PR.SHIPMENT_COST'),'-')																SH_STATUS,

	(SELECT nvl(listagg(GLN.ORDER_RELEASE_REFNUM_VALUE,'; ') WITHIN GROUP (ORDER BY GLN.ORDER_RELEASE_REFNUM_VALUE),'-')
	 FROM ORDER_RELEASE_REFNUM GLN
	 WHERE ORLS.ORDER_RELEASE_GID = GLN.ORDER_RELEASE_GID
		   AND GLN.ORDER_RELEASE_REFNUM_QUAL_GID = 'ULE.ULE_GLN')																		ORLS_GLN,

	(SELECT nvl(listagg(CC.ORDER_RELEASE_REFNUM_VALUE,'; ') WITHIN GROUP (ORDER BY CC.ORDER_RELEASE_REFNUM_VALUE),'-')
	 FROM ORDER_RELEASE_REFNUM CC
	 WHERE ORLS.ORDER_RELEASE_GID = CC.ORDER_RELEASE_GID
		   AND CC.ORDER_RELEASE_REFNUM_QUAL_GID = 'ULE.ULE_COST CENTER')																ORLS_COST_CENTER,
	trim(to_char((select SUM(CASE
				WHEN (SH_COST.COST_GID = 'EUR' or SH_COST.COST_GID is null) THEN SH_COST.COST
				when SH_COST.COST_GID <> 'EUR' then SH_COST.COST *
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sysdate,SH_COST.COST_GID,'EUR')
				END)
	FROM SHIPMENT_COST SH_COST
	WHERE SH_COST.SHIPMENT_GID = SH.SHIPMENT_GID


	),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', ''')) AS															SH_TOTAL_COST,
	(select trim(to_char(SUM(CASE
				WHEN (SH_COST.COST_GID = 'EUR' or SH_COST.COST_GID is null) THEN SH_COST.COST
				when SH_COST.COST_GID <> 'EUR' then SH_COST.COST *
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sysdate,SH_COST.COST_GID,'EUR')
				END),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', '''))
	FROM SHIPMENT_COST SH_COST
	WHERE SH_COST.SHIPMENT_GID = SH.SHIPMENT_GID
	AND COST_TYPE = 'B'


	) AS																																SH_BASE_COST_TOTAL,
	(select trim(to_char(SUM(CASE
				WHEN (SH_COST.COST_GID = 'EUR' or SH_COST.COST_GID is null) THEN SH_COST.COST
				when SH_COST.COST_GID <> 'EUR' then SH_COST.COST *
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sysdate,SH_COST.COST_GID,'EUR')
				END),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', '''))
	FROM SHIPMENT_COST SH_COST
	WHERE SH_COST.SHIPMENT_GID = SH.SHIPMENT_GID
	AND COST_TYPE = 'A'
	AND SH_COST.ACCESSORIAL_CODE_GID LIKE '%FUEL%SURCHARGE%'


	) AS																																SH_FUEL_SURCHARGE,
	(select trim(to_char(SUM(CASE
				WHEN (SH_COST.COST_GID = 'EUR' or SH_COST.COST_GID is null) THEN SH_COST.COST
				when SH_COST.COST_GID <> 'EUR' then SH_COST.COST *
				unilever.ebs_procedures_ule.GET_QUARTERLY_EX_RATE(sysdate,SH_COST.COST_GID,'EUR')
				END),'999999999999D99','NLS_NUMERIC_CHARACTERS = '', '''))
	FROM SHIPMENT_COST SH_COST
	WHERE SH_COST.SHIPMENT_GID = SH.SHIPMENT_GID
	AND COST_TYPE <> 'B'
	and SH_COST.ACCESSORIAL_CODE_GID not like '%FUEL%SURCHARGE%'


	) AS																																SH_CORRECTIONS_COSTS,
	(select trim(to_char(or_temp.TOTAL_SHIP_UNIT_COUNT,'999999999999D99','NLS_NUMERIC_CHARACTERS = '', '''))
	FROM order_release or_temp
	WHERE or_temp.order_release_gid = orls.order_release_gid
	) AS																																SH_TOTAL_UNIT_COUNT





FROM
	SHIPMENT sh,
	SHIPMENT_STOP ss,
	SHIPMENT_STOP_D ssd,
	S_SHIP_UNIT ssu,
	S_SHIP_UNIT_LINE ssul,
	ORDER_RELEASE orls,
	LOCATION sh_source,
	LOCATION sh_dest,
	LOCATION ORLS_SOURCE,
	LOCATION ORLS_DEST,

	(SELECT ORLS_1.ORDER_RELEASE_GID,
			SUM(CASE
				WHEN ALLOC_1.COST_CURRENCY_GID <> 'EUR' THEN ALLOC_1.COST *
					(SELECT	COALESCE((SELECT EX_RATES_2_1.EXCHANGE_RATE
									  FROM 	CURRENCY_EXCHANGE_RATE EX_RATES_2_1
									  WHERE	EX_RATES_2_1.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_1.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND TO_CHAR(ALLOC_1.INSERT_DATE, 'Q-YYYY') =  TO_CHAR(EX_RATES_2_1.EFFECTIVE_DATE, 'Q-YYYY')
											AND ALLOC_1.COST_CURRENCY_GID = EX_RATES_2_1.FROM_CURRENCY_GID),
									 (SELECT EX_RATES_2_2.EXCHANGE_RATE
									  FROM	CURRENCY_EXCHANGE_RATE EX_RATES_2_2
									  WHERE	EX_RATES_2_2.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_2.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND ALLOC_1.COST_CURRENCY_GID = EX_RATES_2_2.FROM_CURRENCY_GID
											AND (EX_RATES_2_2.Effective_Date, EX_RATES_2_2.from_currency_gid) IN (select max(Effective_Date), from_currency_gid from CURRENCY_EXCHANGE_RATE where TO_CURRENCY_GID = 'EUR' AND EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE' group by from_currency_gid))
									) 			EXCHANGE_RATE_TMP
					FROM DUAL)
				ELSE ALLOC_1.COST
			END) COST_EUR
	FROM ORDER_RELEASE ORLS_1,
		 ALLOCATION_ORDER_RELEASE_D ALLOC_1
	WHERE
		NOT EXISTS
		(SELECT 1
		 FROM ORDER_RELEASE_REFNUM ORLSR_BULK
		 WHERE ORLS_1.ORDER_RELEASE_GID = ORLSR_BULK.ORDER_RELEASE_GID
			   AND ORLSR_BULK.ORDER_RELEASE_REFNUM_QUAL_GID = ('ULE.ULE_BULK'))
		AND ALLOC_1.ORDER_RELEASE_GID = ORLS_1.ORDER_RELEASE_GID
		AND ALLOC_1.COST_DESCRIPTION <> 'O'
		AND 1=
		CASE
			WHEN ALLOC_1.COST_DESCRIPTION = 'B' THEN 1
			WHEN ALLOC_1.ACCESSORIAL_CODE_GID LIKE '%FREIGHT%CORRECTION%' THEN 0
			WHEN ALLOC_1.ACCESSORIAL_CODE_GID LIKE '%FUEL%SURCHARGE%' THEN 0
			ELSE 0
		END
	GROUP BY ORLS_1.ORDER_RELEASE_GID
	) NON_BULK_BASE,

	(SELECT ORL_2.ORDER_RELEASE_GID,
			SUM(CASE
				WHEN ALLOC_2.COST_CURRENCY_GID <> 'EUR' THEN ALLOC_2.COST *
					(SELECT	COALESCE((SELECT EX_RATES_2_1.EXCHANGE_RATE
									  FROM 	CURRENCY_EXCHANGE_RATE EX_RATES_2_1
									  WHERE	EX_RATES_2_1.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_1.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND TO_CHAR(ALLOC_2.INSERT_DATE, 'Q-YYYY') =  TO_CHAR(EX_RATES_2_1.EFFECTIVE_DATE, 'Q-YYYY')
											AND ALLOC_2.COST_CURRENCY_GID = EX_RATES_2_1.FROM_CURRENCY_GID),
									 (SELECT EX_RATES_2_2.EXCHANGE_RATE
									  FROM	CURRENCY_EXCHANGE_RATE EX_RATES_2_2
									  WHERE	EX_RATES_2_2.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_2.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND ALLOC_2.COST_CURRENCY_GID = EX_RATES_2_2.FROM_CURRENCY_GID
											AND (EX_RATES_2_2.Effective_Date, EX_RATES_2_2.from_currency_gid) IN (select max(Effective_Date), from_currency_gid from CURRENCY_EXCHANGE_RATE where TO_CURRENCY_GID = 'EUR' AND EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE' group by from_currency_gid))
									) 			EXCHANGE_RATE_TMP
					FROM DUAL)
				ELSE ALLOC_2.COST
			END) COST_EUR
	FROM ORDER_RELEASE_LINE ORL_2,
		 ALLOCATION_OR_LINE_D ALLOC_2

	WHERE
		EXISTS
		(SELECT 1
		 FROM ORDER_RELEASE_REFNUM ORLSR_BULK
		 WHERE ORL_2.ORDER_RELEASE_GID = ORLSR_BULK.ORDER_RELEASE_GID
			   AND ORLSR_BULK.ORDER_RELEASE_REFNUM_QUAL_GID = ('ULE.ULE_BULK'))
		AND ALLOC_2.ORDER_RELEASE_LINE_GID = ORL_2.ORDER_RELEASE_LINE_GID
		AND ALLOC_2.COST_DESCRIPTION <> 'O'
		AND 1=
		CASE
			WHEN ALLOC_2.COST_DESCRIPTION = 'B' THEN 1
			WHEN ALLOC_2.ACCESSORIAL_CODE_GID LIKE '%FREIGHT%CORRECTION%' THEN 0
			WHEN ALLOC_2.ACCESSORIAL_CODE_GID LIKE '%FUEL%SURCHARGE%' THEN 0
			ELSE 0
		END
	GROUP BY ORL_2.ORDER_RELEASE_GID
	) BULK_BASE,


	(SELECT ORLS_1.ORDER_RELEASE_GID,
			SUM(CASE
				WHEN ALLOC_1.COST_CURRENCY_GID <> 'EUR' THEN ALLOC_1.COST *
					(SELECT	COALESCE((SELECT EX_RATES_2_1.EXCHANGE_RATE
									  FROM 	CURRENCY_EXCHANGE_RATE EX_RATES_2_1
									  WHERE	EX_RATES_2_1.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_1.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND TO_CHAR(ALLOC_1.INSERT_DATE, 'Q-YYYY') =  TO_CHAR(EX_RATES_2_1.EFFECTIVE_DATE, 'Q-YYYY')
											AND ALLOC_1.COST_CURRENCY_GID = EX_RATES_2_1.FROM_CURRENCY_GID),
									 (SELECT EX_RATES_2_2.EXCHANGE_RATE
									  FROM	CURRENCY_EXCHANGE_RATE EX_RATES_2_2
									  WHERE	EX_RATES_2_2.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_2.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND ALLOC_1.COST_CURRENCY_GID = EX_RATES_2_2.FROM_CURRENCY_GID
											AND (EX_RATES_2_2.Effective_Date, EX_RATES_2_2.from_currency_gid) IN (select max(Effective_Date), from_currency_gid from CURRENCY_EXCHANGE_RATE where TO_CURRENCY_GID = 'EUR' AND EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE' group by from_currency_gid))
									) 			EXCHANGE_RATE_TMP
					FROM DUAL)
				ELSE ALLOC_1.COST
			END) COST_EUR
	FROM ORDER_RELEASE ORLS_1,
		 ALLOCATION_ORDER_RELEASE_D ALLOC_1
	WHERE
		NOT EXISTS
		(SELECT 1
		 FROM ORDER_RELEASE_REFNUM ORLSR_BULK
		 WHERE ORLS_1.ORDER_RELEASE_GID = ORLSR_BULK.ORDER_RELEASE_GID
			   AND ORLSR_BULK.ORDER_RELEASE_REFNUM_QUAL_GID = ('ULE.ULE_BULK'))
		AND ALLOC_1.ORDER_RELEASE_GID = ORLS_1.ORDER_RELEASE_GID
		AND ALLOC_1.COST_DESCRIPTION <> 'O'
	GROUP BY ORLS_1.ORDER_RELEASE_GID
	) NON_BULK_TOTAL,

	(SELECT ORL_2.ORDER_RELEASE_GID,
			SUM(CASE
				WHEN ALLOC_2.COST_CURRENCY_GID <> 'EUR' THEN ALLOC_2.COST *
					(SELECT	COALESCE((SELECT EX_RATES_2_1.EXCHANGE_RATE
									  FROM 	CURRENCY_EXCHANGE_RATE EX_RATES_2_1
									  WHERE	EX_RATES_2_1.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_1.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND TO_CHAR(ALLOC_2.INSERT_DATE, 'Q-YYYY') =  TO_CHAR(EX_RATES_2_1.EFFECTIVE_DATE, 'Q-YYYY')
											AND ALLOC_2.COST_CURRENCY_GID = EX_RATES_2_1.FROM_CURRENCY_GID),
									 (SELECT EX_RATES_2_2.EXCHANGE_RATE
									  FROM	CURRENCY_EXCHANGE_RATE EX_RATES_2_2
									  WHERE	EX_RATES_2_2.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_2.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND ALLOC_2.COST_CURRENCY_GID = EX_RATES_2_2.FROM_CURRENCY_GID
											AND (EX_RATES_2_2.Effective_Date, EX_RATES_2_2.from_currency_gid) IN (select max(Effective_Date), from_currency_gid from CURRENCY_EXCHANGE_RATE where TO_CURRENCY_GID = 'EUR' AND EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE' group by from_currency_gid))
									) 			EXCHANGE_RATE_TMP
					FROM DUAL)
				ELSE ALLOC_2.COST
			END) COST_EUR
	FROM ORDER_RELEASE_LINE ORL_2,
		 ALLOCATION_OR_LINE_D ALLOC_2

	WHERE
		EXISTS
		(SELECT 1
		 FROM ORDER_RELEASE_REFNUM ORLSR_BULK
		 WHERE ORL_2.ORDER_RELEASE_GID = ORLSR_BULK.ORDER_RELEASE_GID
			   AND ORLSR_BULK.ORDER_RELEASE_REFNUM_QUAL_GID = ('ULE.ULE_BULK'))
		AND ALLOC_2.ORDER_RELEASE_LINE_GID = ORL_2.ORDER_RELEASE_LINE_GID
		AND ALLOC_2.COST_DESCRIPTION <> 'O'
	GROUP BY ORL_2.ORDER_RELEASE_GID
	) BULK_TOTAL,

	(SELECT ORLS_1.ORDER_RELEASE_GID,
			SUM(CASE
				WHEN ALLOC_1.COST_CURRENCY_GID <> 'EUR' THEN ALLOC_1.COST *
					(SELECT	COALESCE((SELECT EX_RATES_2_1.EXCHANGE_RATE
									  FROM 	CURRENCY_EXCHANGE_RATE EX_RATES_2_1
									  WHERE	EX_RATES_2_1.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_1.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND TO_CHAR(ALLOC_1.INSERT_DATE, 'Q-YYYY') =  TO_CHAR(EX_RATES_2_1.EFFECTIVE_DATE, 'Q-YYYY')
											AND ALLOC_1.COST_CURRENCY_GID = EX_RATES_2_1.FROM_CURRENCY_GID),
									 (SELECT EX_RATES_2_2.EXCHANGE_RATE
									  FROM	CURRENCY_EXCHANGE_RATE EX_RATES_2_2
									  WHERE	EX_RATES_2_2.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_2.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND ALLOC_1.COST_CURRENCY_GID = EX_RATES_2_2.FROM_CURRENCY_GID
											AND (EX_RATES_2_2.Effective_Date, EX_RATES_2_2.from_currency_gid) IN (select max(Effective_Date), from_currency_gid from CURRENCY_EXCHANGE_RATE where TO_CURRENCY_GID = 'EUR' AND EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE' group by from_currency_gid))
									) 			EXCHANGE_RATE_TMP
					FROM DUAL)
				ELSE ALLOC_1.COST
			END) COST_EUR
	FROM ORDER_RELEASE ORLS_1,
		 ALLOCATION_ORDER_RELEASE_D ALLOC_1
	WHERE
		NOT EXISTS
		(SELECT 1
		 FROM ORDER_RELEASE_REFNUM ORLSR_BULK
		 WHERE ORLS_1.ORDER_RELEASE_GID = ORLSR_BULK.ORDER_RELEASE_GID
			   AND ORLSR_BULK.ORDER_RELEASE_REFNUM_QUAL_GID = ('ULE.ULE_BULK'))
		AND ALLOC_1.ORDER_RELEASE_GID = ORLS_1.ORDER_RELEASE_GID
		AND ALLOC_1.COST_DESCRIPTION <> 'O'
		AND 1=
		CASE
			WHEN ALLOC_1.COST_DESCRIPTION = 'B' THEN 0
			WHEN ALLOC_1.ACCESSORIAL_CODE_GID LIKE '%FREIGHT%CORRECTION%' THEN 0
			WHEN ALLOC_1.ACCESSORIAL_CODE_GID LIKE '%FUEL%SURCHARGE%' THEN 1
			ELSE 0
		END
	GROUP BY ORLS_1.ORDER_RELEASE_GID
	) NON_BULK_FUEL,

	(SELECT ORL_2.ORDER_RELEASE_GID,
			SUM(CASE
				WHEN ALLOC_2.COST_CURRENCY_GID <> 'EUR' THEN ALLOC_2.COST *
					(SELECT	COALESCE((SELECT EX_RATES_2_1.EXCHANGE_RATE
									  FROM 	CURRENCY_EXCHANGE_RATE EX_RATES_2_1
									  WHERE	EX_RATES_2_1.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_1.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND TO_CHAR(ALLOC_2.INSERT_DATE, 'Q-YYYY') =  TO_CHAR(EX_RATES_2_1.EFFECTIVE_DATE, 'Q-YYYY')
											AND ALLOC_2.COST_CURRENCY_GID = EX_RATES_2_1.FROM_CURRENCY_GID),
									 (SELECT EX_RATES_2_2.EXCHANGE_RATE
									  FROM	CURRENCY_EXCHANGE_RATE EX_RATES_2_2
									  WHERE	EX_RATES_2_2.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_2.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND ALLOC_2.COST_CURRENCY_GID = EX_RATES_2_2.FROM_CURRENCY_GID
											AND (EX_RATES_2_2.Effective_Date, EX_RATES_2_2.from_currency_gid) IN (select max(Effective_Date), from_currency_gid from CURRENCY_EXCHANGE_RATE where TO_CURRENCY_GID = 'EUR' AND EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE' group by from_currency_gid))
									) 			EXCHANGE_RATE_TMP
					FROM DUAL)
				ELSE ALLOC_2.COST
			END) COST_EUR
	FROM ORDER_RELEASE_LINE ORL_2,
		 ALLOCATION_OR_LINE_D ALLOC_2

	WHERE
		EXISTS
		(SELECT 1
		 FROM ORDER_RELEASE_REFNUM ORLSR_BULK
		 WHERE ORL_2.ORDER_RELEASE_GID = ORLSR_BULK.ORDER_RELEASE_GID
			   AND ORLSR_BULK.ORDER_RELEASE_REFNUM_QUAL_GID = ('ULE.ULE_BULK'))
		AND ALLOC_2.ORDER_RELEASE_LINE_GID = ORL_2.ORDER_RELEASE_LINE_GID
		AND ALLOC_2.COST_DESCRIPTION <> 'O'
		AND 1=
		CASE
			WHEN ALLOC_2.COST_DESCRIPTION = 'B' THEN 0
			WHEN ALLOC_2.ACCESSORIAL_CODE_GID LIKE '%FREIGHT%CORRECTION%' THEN 0
			WHEN ALLOC_2.ACCESSORIAL_CODE_GID LIKE '%FUEL%SURCHARGE%' THEN 1
			ELSE 0
		END
	GROUP BY ORL_2.ORDER_RELEASE_GID
	) BULK_FUEL,

	(SELECT ORLS_1.ORDER_RELEASE_GID,
			SUM(CASE
				WHEN ALLOC_1.COST_CURRENCY_GID <> 'EUR' THEN ALLOC_1.COST *
					(SELECT	COALESCE((SELECT EX_RATES_2_1.EXCHANGE_RATE
									  FROM 	CURRENCY_EXCHANGE_RATE EX_RATES_2_1
									  WHERE	EX_RATES_2_1.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_1.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND TO_CHAR(ALLOC_1.INSERT_DATE, 'Q-YYYY') =  TO_CHAR(EX_RATES_2_1.EFFECTIVE_DATE, 'Q-YYYY')
											AND ALLOC_1.COST_CURRENCY_GID = EX_RATES_2_1.FROM_CURRENCY_GID),
									 (SELECT EX_RATES_2_2.EXCHANGE_RATE
									  FROM	CURRENCY_EXCHANGE_RATE EX_RATES_2_2
									  WHERE	EX_RATES_2_2.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_2.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND ALLOC_1.COST_CURRENCY_GID = EX_RATES_2_2.FROM_CURRENCY_GID
											AND (EX_RATES_2_2.Effective_Date, EX_RATES_2_2.from_currency_gid) IN (select max(Effective_Date), from_currency_gid from CURRENCY_EXCHANGE_RATE where TO_CURRENCY_GID = 'EUR' AND EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE' group by from_currency_gid))
									) 			EXCHANGE_RATE_TMP
					FROM DUAL)
				ELSE ALLOC_1.COST
			END) COST_EUR
	FROM ORDER_RELEASE ORLS_1,
		 ALLOCATION_ORDER_RELEASE_D ALLOC_1
	WHERE
		NOT EXISTS
		(SELECT 1
		 FROM ORDER_RELEASE_REFNUM ORLSR_BULK
		 WHERE ORLS_1.ORDER_RELEASE_GID = ORLSR_BULK.ORDER_RELEASE_GID
			   AND ORLSR_BULK.ORDER_RELEASE_REFNUM_QUAL_GID = ('ULE.ULE_BULK'))
		AND ALLOC_1.ORDER_RELEASE_GID = ORLS_1.ORDER_RELEASE_GID
		AND ALLOC_1.COST_DESCRIPTION <> 'O'
		AND 1=
		CASE
			WHEN ALLOC_1.COST_DESCRIPTION = 'B' THEN 0
			WHEN ALLOC_1.ACCESSORIAL_CODE_GID LIKE '%FREIGHT%CORRECTION%' THEN 1
			WHEN ALLOC_1.ACCESSORIAL_CODE_GID LIKE '%FUEL%SURCHARGE%' THEN 0
			ELSE 0
		END
	GROUP BY ORLS_1.ORDER_RELEASE_GID
	) NON_BULK_CORRECTIONS,

	(SELECT ORL_2.ORDER_RELEASE_GID,
			SUM(CASE
				WHEN ALLOC_2.COST_CURRENCY_GID <> 'EUR' THEN ALLOC_2.COST *
					(SELECT	COALESCE((SELECT EX_RATES_2_1.EXCHANGE_RATE
									  FROM 	CURRENCY_EXCHANGE_RATE EX_RATES_2_1
									  WHERE	EX_RATES_2_1.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_1.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND TO_CHAR(ALLOC_2.INSERT_DATE, 'Q-YYYY') =  TO_CHAR(EX_RATES_2_1.EFFECTIVE_DATE, 'Q-YYYY')
											AND ALLOC_2.COST_CURRENCY_GID = EX_RATES_2_1.FROM_CURRENCY_GID),
									 (SELECT EX_RATES_2_2.EXCHANGE_RATE
									  FROM	CURRENCY_EXCHANGE_RATE EX_RATES_2_2
									  WHERE	EX_RATES_2_2.TO_CURRENCY_GID = 'EUR'
											AND EX_RATES_2_2.EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE'
											AND ALLOC_2.COST_CURRENCY_GID = EX_RATES_2_2.FROM_CURRENCY_GID
											AND (EX_RATES_2_2.Effective_Date, EX_RATES_2_2.from_currency_gid) IN (select max(Effective_Date), from_currency_gid from CURRENCY_EXCHANGE_RATE where TO_CURRENCY_GID = 'EUR' AND EXCHANGE_RATE_GID = 'ULE.ULE_QTY_EXCHANGE' group by from_currency_gid))
									) 			EXCHANGE_RATE_TMP
					FROM DUAL)
				ELSE ALLOC_2.COST
			END) COST_EUR
	FROM ORDER_RELEASE_LINE ORL_2,
		 ALLOCATION_OR_LINE_D ALLOC_2

	WHERE
		EXISTS
		(SELECT 1
		 FROM ORDER_RELEASE_REFNUM ORLSR_BULK
		 WHERE ORL_2.ORDER_RELEASE_GID = ORLSR_BULK.ORDER_RELEASE_GID
			   AND ORLSR_BULK.ORDER_RELEASE_REFNUM_QUAL_GID = ('ULE.ULE_BULK'))
		AND ALLOC_2.ORDER_RELEASE_LINE_GID = ORL_2.ORDER_RELEASE_LINE_GID
		AND ALLOC_2.COST_DESCRIPTION <> 'O'
		AND 1=
		CASE
			WHEN ALLOC_2.COST_DESCRIPTION = 'B' THEN 0
			WHEN ALLOC_2.ACCESSORIAL_CODE_GID LIKE '%FREIGHT%CORRECTION%' THEN 1
			WHEN ALLOC_2.ACCESSORIAL_CODE_GID LIKE '%FUEL%SURCHARGE%' THEN 0
			ELSE 0
		END
	GROUP BY ORL_2.ORDER_RELEASE_GID
	) BULK_CORRECTIONS

WHERE
	sh.DOMAIN_NAME IN ('ULE/PR','ULE')
       and sh.TRANSPORT_MODE_GID <> 'HANDLING'
	AND ORLS.ORDER_RELEASE_GID = NON_BULK_BASE.ORDER_RELEASE_GID(+)
	AND ORLS.ORDER_RELEASE_GID = BULK_BASE.ORDER_RELEASE_GID(+)
	AND ORLS.ORDER_RELEASE_GID = NON_BULK_TOTAL.ORDER_RELEASE_GID(+)
	AND ORLS.ORDER_RELEASE_GID = BULK_TOTAL.ORDER_RELEASE_GID(+)
	AND ORLS.ORDER_RELEASE_GID = NON_BULK_FUEL.ORDER_RELEASE_GID(+)
	AND ORLS.ORDER_RELEASE_GID = BULK_FUEL.ORDER_RELEASE_GID(+)
	AND ORLS.ORDER_RELEASE_GID = NON_BULK_CORRECTIONS.ORDER_RELEASE_GID(+)
	AND ORLS.ORDER_RELEASE_GID = BULK_CORRECTIONS.ORDER_RELEASE_GID(+)

	AND ss.shipment_gid = sh.shipment_gid
	AND ssd.SHIPMENT_GID = ss.SHIPMENT_GID
	AND ssd.stop_num = ss.stop_num
	AND ssd.S_SHIP_UNIT_GID = ssu.S_SHIP_UNIT_GID
	AND ssu.S_SHIP_UNIT_GID = ssul.S_SHIP_UNIT_GID
	AND ssul.order_release_gid = orls.order_release_gid
	AND sh_source.LOCATION_GID = sh.SOURCE_LOCATION_GID
	AND sh_dest.LOCATION_GID = sh.DEST_LOCATION_GID
	AND ORLS_SOURCE.LOCATION_GID = ORLS.SOURCE_LOCATION_GID
	AND ORLS_DEST.LOCATION_GID = ORLS.DEST_LOCATION_GID
	AND ss.STOP_TYPE = 'D'
	AND NOT EXISTS
	(SELECT 1
	 FROM shipment_refnum sh_ref_1
	 WHERE sh_ref_1.Shipment_Refnum_Qual_Gid = 'ULE.ULE_SHIPMENT_STREAM'
		   AND sh_ref_1.Shipment_Refnum_Value = 'SECONDARY'
		   AND sh_ref_1.SHIPMENT_GID = SH.SHIPMENT_GID)



	AND TO_CHAR(sh.END_TIME,'MM') = :P_MONTH
	AND TO_CHAR(sh.END_TIME,'YYYY') = :P_YEAR

	AND 	(SELECT nvl(sr_region.SHIPMENT_REFNUM_VALUE,'n/a')
        	FROM
        		shipment_refnum sr_region
        	WHERE
        		sh.shipment_gid = sr_region.shipment_gid
        		AND sr_region.SHIPMENT_REFNUM_QUAL_GID = 'ULE.ULE_FUNCTIONAL_REGION') NOT IN ('BULK','INBOUND')

    and (SELECT LISTAGG(nvl(orr_mat_type.ORDER_RELEASE_REFNUM_VALUE,'n/a'),'/') within group (order by orls.ORDER_RELEASE_GID)
    FROM
        ORDER_RELEASE_REFNUM orr_mat_type
    WHERE
        orls.ORDER_RELEASE_GID = orr_mat_type.ORDER_RELEASE_GID
        AND orr_mat_type.ORDER_RELEASE_REFNUM_QUAL_GID = 'ULE.ULE_MATERIAL_TYPE') in ('FINISHED GOODS')